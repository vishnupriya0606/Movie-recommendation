{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "Recommender System is a system that seeks to predict or filter preferences according to the user's choices. Recommender systems are utilized in a variety of areas including movies, music, news, books, research articles, search queries, social tags, and products in general Recommender systems produce a list of recommendations in any of the two ways-\n",
        "\n",
        "**Collaborative filtering:** Collaborative filtering approaches build a model from the user's past behavior (i e items purchased or searched by the user) as well as similar decisions made by other users. This model is then used to predict items (or ratings for items) that users may have an interest in\n",
        "\n",
        "**Content-based filtering**: Content-based filtering approaches uses a series of discrete characteristics of an item in order to recommend additional items with similar properties. Content-based filtering methods are totally based on a description of the item and a profile of the user's preferences, It recommends items based on the user's past preferences. Let's develop a basic recommendation system using Python and Pandas\n",
        "\n",
        "Let's develop a basic recommendation system by suggesting items that are most similar to a particular item, in this case, movies, it just tells what movies/items are most similar to the user's movie choice."
      ],
      "metadata": {
        "id": "zdy_vZbGbBn7"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Import Library**"
      ],
      "metadata": {
        "id": "JtToFoUAblsx"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "lZPpoUwmaNJD"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np"
      ],
      "metadata": {
        "id": "Ag6q_uIegNB4"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Import** **Data**"
      ],
      "metadata": {
        "id": "FZI1twQlgXkB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df =pd.read_csv('/content/drive/MyDrive/Movies Recommendation.csv')"
      ],
      "metadata": {
        "id": "WeB6rHecgRfh"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 655
        },
        "id": "w65yqsPBg5ax",
        "outputId": "b6bc0ba8-7a1b-4229-96d3-864c7fed2e7f"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Movie_ID      Movie_Title                       Movie_Genre Movie_Language  \\\n",
              "0         1       Four Rooms                      Crime Comedy             en   \n",
              "1         2        Star Wars  Adventure Action Science Fiction             en   \n",
              "2         3     Finding Nemo                  Animation Family             en   \n",
              "3         4     Forrest Gump              Comedy Drama Romance             en   \n",
              "4         5  American Beauty                             Drama             en   \n",
              "\n",
              "   Movie_Budget  Movie_Popularity Movie_Release_Date  Movie_Revenue  \\\n",
              "0       4000000         22.876230         09-12-1995        4300000   \n",
              "1      11000000        126.393695         25-05-1977      775398007   \n",
              "2      94000000         85.688789         30-05-2003      940335536   \n",
              "3      55000000        138.133331         06-07-1994      677945399   \n",
              "4      15000000         80.878605         15-09-1999      356296601   \n",
              "\n",
              "   Movie_Runtime  Movie_Vote  ...  \\\n",
              "0           98.0         6.5  ...   \n",
              "1          121.0         8.1  ...   \n",
              "2          100.0         7.6  ...   \n",
              "3          142.0         8.2  ...   \n",
              "4          122.0         7.9  ...   \n",
              "\n",
              "                                      Movie_Homepage  \\\n",
              "0                                                NaN   \n",
              "1  http://www.starwars.com/films/star-wars-episod...   \n",
              "2              http://movies.disney.com/finding-nemo   \n",
              "3                                                NaN   \n",
              "4                      http://www.dreamworks.com/ab/   \n",
              "\n",
              "                                      Movie_Keywords  \\\n",
              "0          hotel new year's eve witch bet hotel room   \n",
              "1        android galaxy hermit death star lightsaber   \n",
              "2  father son relationship harbor underwater fish...   \n",
              "3  vietnam veteran hippie mentally disabled runni...   \n",
              "4  male nudity female nudity adultery midlife cri...   \n",
              "\n",
              "                                      Movie_Overview  \\\n",
              "0  It's Ted the Bellhop's first night on the job....   \n",
              "1  Princess Leia is captured and held hostage by ...   \n",
              "2  Nemo, an adventurous young clownfish, is unexp...   \n",
              "3  A man with a low IQ has accomplished great thi...   \n",
              "4  Lester Burnham, a depressed suburban father in...   \n",
              "\n",
              "                              Movie_Production_House  \\\n",
              "0  [{\"name\": \"Miramax Films\", \"id\": 14}, {\"name\":...   \n",
              "1  [{\"name\": \"Lucasfilm\", \"id\": 1}, {\"name\": \"Twe...   \n",
              "2     [{\"name\": \"Pixar Animation Studios\", \"id\": 3}]   \n",
              "3          [{\"name\": \"Paramount Pictures\", \"id\": 4}]   \n",
              "4  [{\"name\": \"DreamWorks SKG\", \"id\": 27}, {\"name\"...   \n",
              "\n",
              "                            Movie_Production_Country  \\\n",
              "0  [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "1  [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "2  [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "3  [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "4  [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "\n",
              "                      Movie_Spoken_Language  \\\n",
              "0  [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "1  [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "2  [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "3  [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "4  [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "\n",
              "                                       Movie_Tagline  \\\n",
              "0  Twelve outrageous guests. Four scandalous requ...   \n",
              "1       A long time ago in a galaxy far, far away...   \n",
              "2  There are 3.7 trillion fish in the ocean, they...   \n",
              "3  The world will never be the same, once you've ...   \n",
              "4                                       Look closer.   \n",
              "\n",
              "                                          Movie_Cast  \\\n",
              "0  Tim Roth Antonio Banderas Jennifer Beals Madon...   \n",
              "1  Mark Hamill Harrison Ford Carrie Fisher Peter ...   \n",
              "2  Albert Brooks Ellen DeGeneres Alexander Gould ...   \n",
              "3  Tom Hanks Robin Wright Gary Sinise Mykelti Wil...   \n",
              "4  Kevin Spacey Annette Bening Thora Birch Wes Be...   \n",
              "\n",
              "                                          Movie_Crew   Movie_Director  \n",
              "0  [{'name': 'Allison Anders', 'gender': 1, 'depa...   Allison Anders  \n",
              "1  [{'name': 'George Lucas', 'gender': 2, 'depart...     George Lucas  \n",
              "2  [{'name': 'Andrew Stanton', 'gender': 2, 'depa...   Andrew Stanton  \n",
              "3  [{'name': 'Alan Silvestri', 'gender': 2, 'depa...  Robert Zemeckis  \n",
              "4  [{'name': 'Thomas Newman', 'gender': 2, 'depar...       Sam Mendes  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f6263b74-411d-41ed-b959-615578d4fe51\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Movie_ID</th>\n",
              "      <th>Movie_Title</th>\n",
              "      <th>Movie_Genre</th>\n",
              "      <th>Movie_Language</th>\n",
              "      <th>Movie_Budget</th>\n",
              "      <th>Movie_Popularity</th>\n",
              "      <th>Movie_Release_Date</th>\n",
              "      <th>Movie_Revenue</th>\n",
              "      <th>Movie_Runtime</th>\n",
              "      <th>Movie_Vote</th>\n",
              "      <th>...</th>\n",
              "      <th>Movie_Homepage</th>\n",
              "      <th>Movie_Keywords</th>\n",
              "      <th>Movie_Overview</th>\n",
              "      <th>Movie_Production_House</th>\n",
              "      <th>Movie_Production_Country</th>\n",
              "      <th>Movie_Spoken_Language</th>\n",
              "      <th>Movie_Tagline</th>\n",
              "      <th>Movie_Cast</th>\n",
              "      <th>Movie_Crew</th>\n",
              "      <th>Movie_Director</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Four Rooms</td>\n",
              "      <td>Crime Comedy</td>\n",
              "      <td>en</td>\n",
              "      <td>4000000</td>\n",
              "      <td>22.876230</td>\n",
              "      <td>09-12-1995</td>\n",
              "      <td>4300000</td>\n",
              "      <td>98.0</td>\n",
              "      <td>6.5</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>hotel new year's eve witch bet hotel room</td>\n",
              "      <td>It's Ted the Bellhop's first night on the job....</td>\n",
              "      <td>[{\"name\": \"Miramax Films\", \"id\": 14}, {\"name\":...</td>\n",
              "      <td>[{\"iso_3166_1\": \"US\", \"name\": \"United States o...</td>\n",
              "      <td>[{\"iso_639_1\": \"en\", \"name\": \"English\"}]</td>\n",
              "      <td>Twelve outrageous guests. Four scandalous requ...</td>\n",
              "      <td>Tim Roth Antonio Banderas Jennifer Beals Madon...</td>\n",
              "      <td>[{'name': 'Allison Anders', 'gender': 1, 'depa...</td>\n",
              "      <td>Allison Anders</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Star Wars</td>\n",
              "      <td>Adventure Action Science Fiction</td>\n",
              "      <td>en</td>\n",
              "      <td>11000000</td>\n",
              "      <td>126.393695</td>\n",
              "      <td>25-05-1977</td>\n",
              "      <td>775398007</td>\n",
              "      <td>121.0</td>\n",
              "      <td>8.1</td>\n",
              "      <td>...</td>\n",
              "      <td>http://www.starwars.com/films/star-wars-episod...</td>\n",
              "      <td>android galaxy hermit death star lightsaber</td>\n",
              "      <td>Princess Leia is captured and held hostage by ...</td>\n",
              "      <td>[{\"name\": \"Lucasfilm\", \"id\": 1}, {\"name\": \"Twe...</td>\n",
              "      <td>[{\"iso_3166_1\": \"US\", \"name\": \"United States o...</td>\n",
              "      <td>[{\"iso_639_1\": \"en\", \"name\": \"English\"}]</td>\n",
              "      <td>A long time ago in a galaxy far, far away...</td>\n",
              "      <td>Mark Hamill Harrison Ford Carrie Fisher Peter ...</td>\n",
              "      <td>[{'name': 'George Lucas', 'gender': 2, 'depart...</td>\n",
              "      <td>George Lucas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Finding Nemo</td>\n",
              "      <td>Animation Family</td>\n",
              "      <td>en</td>\n",
              "      <td>94000000</td>\n",
              "      <td>85.688789</td>\n",
              "      <td>30-05-2003</td>\n",
              "      <td>940335536</td>\n",
              "      <td>100.0</td>\n",
              "      <td>7.6</td>\n",
              "      <td>...</td>\n",
              "      <td>http://movies.disney.com/finding-nemo</td>\n",
              "      <td>father son relationship harbor underwater fish...</td>\n",
              "      <td>Nemo, an adventurous young clownfish, is unexp...</td>\n",
              "      <td>[{\"name\": \"Pixar Animation Studios\", \"id\": 3}]</td>\n",
              "      <td>[{\"iso_3166_1\": \"US\", \"name\": \"United States o...</td>\n",
              "      <td>[{\"iso_639_1\": \"en\", \"name\": \"English\"}]</td>\n",
              "      <td>There are 3.7 trillion fish in the ocean, they...</td>\n",
              "      <td>Albert Brooks Ellen DeGeneres Alexander Gould ...</td>\n",
              "      <td>[{'name': 'Andrew Stanton', 'gender': 2, 'depa...</td>\n",
              "      <td>Andrew Stanton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Forrest Gump</td>\n",
              "      <td>Comedy Drama Romance</td>\n",
              "      <td>en</td>\n",
              "      <td>55000000</td>\n",
              "      <td>138.133331</td>\n",
              "      <td>06-07-1994</td>\n",
              "      <td>677945399</td>\n",
              "      <td>142.0</td>\n",
              "      <td>8.2</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>vietnam veteran hippie mentally disabled runni...</td>\n",
              "      <td>A man with a low IQ has accomplished great thi...</td>\n",
              "      <td>[{\"name\": \"Paramount Pictures\", \"id\": 4}]</td>\n",
              "      <td>[{\"iso_3166_1\": \"US\", \"name\": \"United States o...</td>\n",
              "      <td>[{\"iso_639_1\": \"en\", \"name\": \"English\"}]</td>\n",
              "      <td>The world will never be the same, once you've ...</td>\n",
              "      <td>Tom Hanks Robin Wright Gary Sinise Mykelti Wil...</td>\n",
              "      <td>[{'name': 'Alan Silvestri', 'gender': 2, 'depa...</td>\n",
              "      <td>Robert Zemeckis</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>American Beauty</td>\n",
              "      <td>Drama</td>\n",
              "      <td>en</td>\n",
              "      <td>15000000</td>\n",
              "      <td>80.878605</td>\n",
              "      <td>15-09-1999</td>\n",
              "      <td>356296601</td>\n",
              "      <td>122.0</td>\n",
              "      <td>7.9</td>\n",
              "      <td>...</td>\n",
              "      <td>http://www.dreamworks.com/ab/</td>\n",
              "      <td>male nudity female nudity adultery midlife cri...</td>\n",
              "      <td>Lester Burnham, a depressed suburban father in...</td>\n",
              "      <td>[{\"name\": \"DreamWorks SKG\", \"id\": 27}, {\"name\"...</td>\n",
              "      <td>[{\"iso_3166_1\": \"US\", \"name\": \"United States o...</td>\n",
              "      <td>[{\"iso_639_1\": \"en\", \"name\": \"English\"}]</td>\n",
              "      <td>Look closer.</td>\n",
              "      <td>Kevin Spacey Annette Bening Thora Birch Wes Be...</td>\n",
              "      <td>[{'name': 'Thomas Newman', 'gender': 2, 'depar...</td>\n",
              "      <td>Sam Mendes</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6263b74-411d-41ed-b959-615578d4fe51')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f6263b74-411d-41ed-b959-615578d4fe51 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f6263b74-411d-41ed-b959-615578d4fe51');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-639bdfd5-ae52-4dec-aa35-5e5c018d9810\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-639bdfd5-ae52-4dec-aa35-5e5c018d9810')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-639bdfd5-ae52-4dec-aa35-5e5c018d9810 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6bCCmSvdjPUq",
        "outputId": "d076ca8e-d012-49ff-e6ef-a4e92d116bbd"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4760 entries, 0 to 4759\n",
            "Data columns (total 21 columns):\n",
            " #   Column                    Non-Null Count  Dtype  \n",
            "---  ------                    --------------  -----  \n",
            " 0   Movie_ID                  4760 non-null   int64  \n",
            " 1   Movie_Title               4760 non-null   object \n",
            " 2   Movie_Genre               4760 non-null   object \n",
            " 3   Movie_Language            4760 non-null   object \n",
            " 4   Movie_Budget              4760 non-null   int64  \n",
            " 5   Movie_Popularity          4760 non-null   float64\n",
            " 6   Movie_Release_Date        4760 non-null   object \n",
            " 7   Movie_Revenue             4760 non-null   int64  \n",
            " 8   Movie_Runtime             4758 non-null   float64\n",
            " 9   Movie_Vote                4760 non-null   float64\n",
            " 10  Movie_Vote_Count          4760 non-null   int64  \n",
            " 11  Movie_Homepage            1699 non-null   object \n",
            " 12  Movie_Keywords            4373 non-null   object \n",
            " 13  Movie_Overview            4757 non-null   object \n",
            " 14  Movie_Production_House    4760 non-null   object \n",
            " 15  Movie_Production_Country  4760 non-null   object \n",
            " 16  Movie_Spoken_Language     4760 non-null   object \n",
            " 17  Movie_Tagline             3942 non-null   object \n",
            " 18  Movie_Cast                4733 non-null   object \n",
            " 19  Movie_Crew                4760 non-null   object \n",
            " 20  Movie_Director            4738 non-null   object \n",
            "dtypes: float64(3), int64(4), object(14)\n",
            "memory usage: 781.1+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        },
        "id": "9g5Qgwh0r9c5",
        "outputId": "a777b283-3c37-46e5-9d50-5994e3b0e3d9"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method NDFrame.describe of       Movie_ID                  Movie_Title                       Movie_Genre  \\\n",
              "0            1                   Four Rooms                      Crime Comedy   \n",
              "1            2                    Star Wars  Adventure Action Science Fiction   \n",
              "2            3                 Finding Nemo                  Animation Family   \n",
              "3            4                 Forrest Gump              Comedy Drama Romance   \n",
              "4            5              American Beauty                             Drama   \n",
              "...        ...                          ...                               ...   \n",
              "4755      4784             Midnight Cabaret                            Horror   \n",
              "4756      4785             Growing Up Smith               Comedy Family Drama   \n",
              "4757      4786                       8 Days                    Thriller Drama   \n",
              "4758      4787              Running Forever                            Family   \n",
              "4759      4788  To Be Frank, Sinatra at 100                       Documentary   \n",
              "\n",
              "     Movie_Language  Movie_Budget  Movie_Popularity Movie_Release_Date  \\\n",
              "0                en       4000000         22.876230         09-12-1995   \n",
              "1                en      11000000        126.393695         25-05-1977   \n",
              "2                en      94000000         85.688789         30-05-2003   \n",
              "3                en      55000000        138.133331         06-07-1994   \n",
              "4                en      15000000         80.878605         15-09-1999   \n",
              "...             ...           ...               ...                ...   \n",
              "4755             en             0          0.001389         01-01-1990   \n",
              "4756             en             0          0.710870         03-02-2017   \n",
              "4757             en             0          0.015295         15-06-2014   \n",
              "4758             en             0          0.028756         27-10-2015   \n",
              "4759             en             2          0.050625         12-12-2015   \n",
              "\n",
              "      Movie_Revenue  Movie_Runtime  Movie_Vote  ...  \\\n",
              "0           4300000           98.0         6.5  ...   \n",
              "1         775398007          121.0         8.1  ...   \n",
              "2         940335536          100.0         7.6  ...   \n",
              "3         677945399          142.0         8.2  ...   \n",
              "4         356296601          122.0         7.9  ...   \n",
              "...             ...            ...         ...  ...   \n",
              "4755              0           94.0         0.0  ...   \n",
              "4756              0          102.0         7.4  ...   \n",
              "4757              0           90.0         0.0  ...   \n",
              "4758              0           88.0         0.0  ...   \n",
              "4759              0            NaN         0.0  ...   \n",
              "\n",
              "                                         Movie_Homepage  \\\n",
              "0                                                   NaN   \n",
              "1     http://www.starwars.com/films/star-wars-episod...   \n",
              "2                 http://movies.disney.com/finding-nemo   \n",
              "3                                                   NaN   \n",
              "4                         http://www.dreamworks.com/ab/   \n",
              "...                                                 ...   \n",
              "4755                                                NaN   \n",
              "4756                 http://www.growingupsmithmovie.com   \n",
              "4757                                                NaN   \n",
              "4758                                                NaN   \n",
              "4759                                                NaN   \n",
              "\n",
              "                                         Movie_Keywords  \\\n",
              "0             hotel new year's eve witch bet hotel room   \n",
              "1           android galaxy hermit death star lightsaber   \n",
              "2     father son relationship harbor underwater fish...   \n",
              "3     vietnam veteran hippie mentally disabled runni...   \n",
              "4     male nudity female nudity adultery midlife cri...   \n",
              "...                                                 ...   \n",
              "4755                                                NaN   \n",
              "4756                                                NaN   \n",
              "4757                     christian film sex trafficking   \n",
              "4758                                                NaN   \n",
              "4759  music actors legendary perfomer classic hollyw...   \n",
              "\n",
              "                                         Movie_Overview  \\\n",
              "0     It's Ted the Bellhop's first night on the job....   \n",
              "1     Princess Leia is captured and held hostage by ...   \n",
              "2     Nemo, an adventurous young clownfish, is unexp...   \n",
              "3     A man with a low IQ has accomplished great thi...   \n",
              "4     Lester Burnham, a depressed suburban father in...   \n",
              "...                                                 ...   \n",
              "4755  A Broadway producer puts on a play with a Devi...   \n",
              "4756  In 1979, an Indian family moves to America wit...   \n",
              "4757  After sneaking to a party with her friends, 16...   \n",
              "4758  After being estranged since her mother's death...   \n",
              "4759                                                NaN   \n",
              "\n",
              "                                 Movie_Production_House  \\\n",
              "0     [{\"name\": \"Miramax Films\", \"id\": 14}, {\"name\":...   \n",
              "1     [{\"name\": \"Lucasfilm\", \"id\": 1}, {\"name\": \"Twe...   \n",
              "2        [{\"name\": \"Pixar Animation Studios\", \"id\": 3}]   \n",
              "3             [{\"name\": \"Paramount Pictures\", \"id\": 4}]   \n",
              "4     [{\"name\": \"DreamWorks SKG\", \"id\": 27}, {\"name\"...   \n",
              "...                                                 ...   \n",
              "4755                                                 []   \n",
              "4756                                                 []   \n",
              "4757     [{\"name\": \"After Eden Pictures\", \"id\": 85248}]   \n",
              "4758    [{\"name\": \"New Kingdom Pictures\", \"id\": 41671}]   \n",
              "4759   [{\"name\": \"Eyeline Entertainment\", \"id\": 60343}]   \n",
              "\n",
              "                               Movie_Production_Country  \\\n",
              "0     [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "1     [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "2     [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "3     [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "4     [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "...                                                 ...   \n",
              "4755                                                 []   \n",
              "4756                                                 []   \n",
              "4757  [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "4758  [{\"iso_3166_1\": \"US\", \"name\": \"United States o...   \n",
              "4759   [{\"iso_3166_1\": \"GB\", \"name\": \"United Kingdom\"}]   \n",
              "\n",
              "                         Movie_Spoken_Language  \\\n",
              "0     [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "1     [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "2     [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "3     [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "4     [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "...                                        ...   \n",
              "4755  [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "4756  [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "4757  [{\"iso_639_1\": \"en\", \"name\": \"English\"}]   \n",
              "4758                                        []   \n",
              "4759                                        []   \n",
              "\n",
              "                                          Movie_Tagline  \\\n",
              "0     Twelve outrageous guests. Four scandalous requ...   \n",
              "1          A long time ago in a galaxy far, far away...   \n",
              "2     There are 3.7 trillion fish in the ocean, they...   \n",
              "3     The world will never be the same, once you've ...   \n",
              "4                                          Look closer.   \n",
              "...                                                 ...   \n",
              "4755                The hot spot where Satan's waitin'.   \n",
              "4756           It’s better to stand out than to fit in.   \n",
              "4757           She never knew it could happen to her...   \n",
              "4758                                                NaN   \n",
              "4759                                                NaN   \n",
              "\n",
              "                                             Movie_Cast  \\\n",
              "0     Tim Roth Antonio Banderas Jennifer Beals Madon...   \n",
              "1     Mark Hamill Harrison Ford Carrie Fisher Peter ...   \n",
              "2     Albert Brooks Ellen DeGeneres Alexander Gould ...   \n",
              "3     Tom Hanks Robin Wright Gary Sinise Mykelti Wil...   \n",
              "4     Kevin Spacey Annette Bening Thora Birch Wes Be...   \n",
              "...                                                 ...   \n",
              "4755  Lisa Hart Carroll Michael Des Barres Paul Drak...   \n",
              "4756  Roni Akurati Brighton Sharbino Jason Lee Anjul...   \n",
              "4757  Nicole Smolen Kim Baldwin Ariana Stephens Brys...   \n",
              "4758                                                NaN   \n",
              "4759                                    Tony Oppedisano   \n",
              "\n",
              "                                             Movie_Crew     Movie_Director  \n",
              "0     [{'name': 'Allison Anders', 'gender': 1, 'depa...     Allison Anders  \n",
              "1     [{'name': 'George Lucas', 'gender': 2, 'depart...       George Lucas  \n",
              "2     [{'name': 'Andrew Stanton', 'gender': 2, 'depa...     Andrew Stanton  \n",
              "3     [{'name': 'Alan Silvestri', 'gender': 2, 'depa...    Robert Zemeckis  \n",
              "4     [{'name': 'Thomas Newman', 'gender': 2, 'depar...         Sam Mendes  \n",
              "...                                                 ...                ...  \n",
              "4755  [{'name': 'Pece Dingo', 'gender': 0, 'departme...         Pece Dingo  \n",
              "4756  [{'name': 'Frank Lotito', 'gender': 0, 'depart...       Frank Lotito  \n",
              "4757  [{'name': 'Jaco Booyens', 'gender': 0, 'depart...       Jaco Booyens  \n",
              "4758                                                 []                NaN  \n",
              "4759  [{'name': 'Simon Napier-Bell', 'gender': 0, 'd...  Simon Napier-Bell  \n",
              "\n",
              "[4760 rows x 21 columns]>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.generic.NDFrame.describe</b><br/>def describe(percentiles=None, include=None, exclude=None) -&gt; NDFrameT</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py</a>Generate descriptive statistics.\n",
              "\n",
              "Descriptive statistics include those that summarize the central\n",
              "tendency, dispersion and shape of a\n",
              "dataset&#x27;s distribution, excluding ``NaN`` values.\n",
              "\n",
              "Analyzes both numeric and object series, as well\n",
              "as ``DataFrame`` column sets of mixed data types. The output\n",
              "will vary depending on what is provided. Refer to the notes\n",
              "below for more detail.\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "percentiles : list-like of numbers, optional\n",
              "    The percentiles to include in the output. All should\n",
              "    fall between 0 and 1. The default is\n",
              "    ``[.25, .5, .75]``, which returns the 25th, 50th, and\n",
              "    75th percentiles.\n",
              "include : &#x27;all&#x27;, list-like of dtypes or None (default), optional\n",
              "    A white list of data types to include in the result. Ignored\n",
              "    for ``Series``. Here are the options:\n",
              "\n",
              "    - &#x27;all&#x27; : All columns of the input will be included in the output.\n",
              "    - A list-like of dtypes : Limits the results to the\n",
              "      provided data types.\n",
              "      To limit the result to numeric types submit\n",
              "      ``numpy.number``. To limit it instead to object columns submit\n",
              "      the ``numpy.object`` data type. Strings\n",
              "      can also be used in the style of\n",
              "      ``select_dtypes`` (e.g. ``df.describe(include=[&#x27;O&#x27;])``). To\n",
              "      select pandas categorical columns, use ``&#x27;category&#x27;``\n",
              "    - None (default) : The result will include all numeric columns.\n",
              "exclude : list-like of dtypes or None (default), optional,\n",
              "    A black list of data types to omit from the result. Ignored\n",
              "    for ``Series``. Here are the options:\n",
              "\n",
              "    - A list-like of dtypes : Excludes the provided data types\n",
              "      from the result. To exclude numeric types submit\n",
              "      ``numpy.number``. To exclude object columns submit the data\n",
              "      type ``numpy.object``. Strings can also be used in the style of\n",
              "      ``select_dtypes`` (e.g. ``df.describe(exclude=[&#x27;O&#x27;])``). To\n",
              "      exclude pandas categorical columns, use ``&#x27;category&#x27;``\n",
              "    - None (default) : The result will exclude nothing.\n",
              "\n",
              "Returns\n",
              "-------\n",
              "Series or DataFrame\n",
              "    Summary statistics of the Series or Dataframe provided.\n",
              "\n",
              "See Also\n",
              "--------\n",
              "DataFrame.count: Count number of non-NA/null observations.\n",
              "DataFrame.max: Maximum of the values in the object.\n",
              "DataFrame.min: Minimum of the values in the object.\n",
              "DataFrame.mean: Mean of the values.\n",
              "DataFrame.std: Standard deviation of the observations.\n",
              "DataFrame.select_dtypes: Subset of a DataFrame including/excluding\n",
              "    columns based on their dtype.\n",
              "\n",
              "Notes\n",
              "-----\n",
              "For numeric data, the result&#x27;s index will include ``count``,\n",
              "``mean``, ``std``, ``min``, ``max`` as well as lower, ``50`` and\n",
              "upper percentiles. By default the lower percentile is ``25`` and the\n",
              "upper percentile is ``75``. The ``50`` percentile is the\n",
              "same as the median.\n",
              "\n",
              "For object data (e.g. strings or timestamps), the result&#x27;s index\n",
              "will include ``count``, ``unique``, ``top``, and ``freq``. The ``top``\n",
              "is the most common value. The ``freq`` is the most common value&#x27;s\n",
              "frequency. Timestamps also include the ``first`` and ``last`` items.\n",
              "\n",
              "If multiple object values have the highest count, then the\n",
              "``count`` and ``top`` results will be arbitrarily chosen from\n",
              "among those with the highest count.\n",
              "\n",
              "For mixed data types provided via a ``DataFrame``, the default is to\n",
              "return only an analysis of numeric columns. If the dataframe consists\n",
              "only of object and categorical data without any numeric columns, the\n",
              "default is to return an analysis of both the object and categorical\n",
              "columns. If ``include=&#x27;all&#x27;`` is provided as an option, the result\n",
              "will include a union of attributes of each type.\n",
              "\n",
              "The `include` and `exclude` parameters can be used to limit\n",
              "which columns in a ``DataFrame`` are analyzed for the output.\n",
              "The parameters are ignored when analyzing a ``Series``.\n",
              "\n",
              "Examples\n",
              "--------\n",
              "Describing a numeric ``Series``.\n",
              "\n",
              "&gt;&gt;&gt; s = pd.Series([1, 2, 3])\n",
              "&gt;&gt;&gt; s.describe()\n",
              "count    3.0\n",
              "mean     2.0\n",
              "std      1.0\n",
              "min      1.0\n",
              "25%      1.5\n",
              "50%      2.0\n",
              "75%      2.5\n",
              "max      3.0\n",
              "dtype: float64\n",
              "\n",
              "Describing a categorical ``Series``.\n",
              "\n",
              "&gt;&gt;&gt; s = pd.Series([&#x27;a&#x27;, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n",
              "&gt;&gt;&gt; s.describe()\n",
              "count     4\n",
              "unique    3\n",
              "top       a\n",
              "freq      2\n",
              "dtype: object\n",
              "\n",
              "Describing a timestamp ``Series``.\n",
              "\n",
              "&gt;&gt;&gt; s = pd.Series([\n",
              "...     np.datetime64(&quot;2000-01-01&quot;),\n",
              "...     np.datetime64(&quot;2010-01-01&quot;),\n",
              "...     np.datetime64(&quot;2010-01-01&quot;)\n",
              "... ])\n",
              "&gt;&gt;&gt; s.describe()\n",
              "count                      3\n",
              "mean     2006-09-01 08:00:00\n",
              "min      2000-01-01 00:00:00\n",
              "25%      2004-12-31 12:00:00\n",
              "50%      2010-01-01 00:00:00\n",
              "75%      2010-01-01 00:00:00\n",
              "max      2010-01-01 00:00:00\n",
              "dtype: object\n",
              "\n",
              "Describing a ``DataFrame``. By default only numeric fields\n",
              "are returned.\n",
              "\n",
              "&gt;&gt;&gt; df = pd.DataFrame({&#x27;categorical&#x27;: pd.Categorical([&#x27;d&#x27;,&#x27;e&#x27;,&#x27;f&#x27;]),\n",
              "...                    &#x27;numeric&#x27;: [1, 2, 3],\n",
              "...                    &#x27;object&#x27;: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]\n",
              "...                   })\n",
              "&gt;&gt;&gt; df.describe()\n",
              "       numeric\n",
              "count      3.0\n",
              "mean       2.0\n",
              "std        1.0\n",
              "min        1.0\n",
              "25%        1.5\n",
              "50%        2.0\n",
              "75%        2.5\n",
              "max        3.0\n",
              "\n",
              "Describing all columns of a ``DataFrame`` regardless of data type.\n",
              "\n",
              "&gt;&gt;&gt; df.describe(include=&#x27;all&#x27;)  # doctest: +SKIP\n",
              "       categorical  numeric object\n",
              "count            3      3.0      3\n",
              "unique           3      NaN      3\n",
              "top              f      NaN      a\n",
              "freq             1      NaN      1\n",
              "mean           NaN      2.0    NaN\n",
              "std            NaN      1.0    NaN\n",
              "min            NaN      1.0    NaN\n",
              "25%            NaN      1.5    NaN\n",
              "50%            NaN      2.0    NaN\n",
              "75%            NaN      2.5    NaN\n",
              "max            NaN      3.0    NaN\n",
              "\n",
              "Describing a column from a ``DataFrame`` by accessing it as\n",
              "an attribute.\n",
              "\n",
              "&gt;&gt;&gt; df.numeric.describe()\n",
              "count    3.0\n",
              "mean     2.0\n",
              "std      1.0\n",
              "min      1.0\n",
              "25%      1.5\n",
              "50%      2.0\n",
              "75%      2.5\n",
              "max      3.0\n",
              "Name: numeric, dtype: float64\n",
              "\n",
              "Including only numeric columns in a ``DataFrame`` description.\n",
              "\n",
              "&gt;&gt;&gt; df.describe(include=[np.number])\n",
              "       numeric\n",
              "count      3.0\n",
              "mean       2.0\n",
              "std        1.0\n",
              "min        1.0\n",
              "25%        1.5\n",
              "50%        2.0\n",
              "75%        2.5\n",
              "max        3.0\n",
              "\n",
              "Including only string columns in a ``DataFrame`` description.\n",
              "\n",
              "&gt;&gt;&gt; df.describe(include=[object])  # doctest: +SKIP\n",
              "       object\n",
              "count       3\n",
              "unique      3\n",
              "top         a\n",
              "freq        1\n",
              "\n",
              "Including only categorical columns from a ``DataFrame`` description.\n",
              "\n",
              "&gt;&gt;&gt; df.describe(include=[&#x27;category&#x27;])\n",
              "       categorical\n",
              "count            3\n",
              "unique           3\n",
              "top              d\n",
              "freq             1\n",
              "\n",
              "Excluding numeric columns from a ``DataFrame`` description.\n",
              "\n",
              "&gt;&gt;&gt; df.describe(exclude=[np.number])  # doctest: +SKIP\n",
              "       categorical object\n",
              "count            3      3\n",
              "unique           3      3\n",
              "top              f      a\n",
              "freq             1      1\n",
              "\n",
              "Excluding object columns from a ``DataFrame`` description.\n",
              "\n",
              "&gt;&gt;&gt; df.describe(exclude=[object])  # doctest: +SKIP\n",
              "       categorical  numeric\n",
              "count            3      3.0\n",
              "unique           3      NaN\n",
              "top              f      NaN\n",
              "freq             1      NaN\n",
              "mean           NaN      2.0\n",
              "std            NaN      1.0\n",
              "min            NaN      1.0\n",
              "25%            NaN      1.5\n",
              "50%            NaN      2.0\n",
              "75%            NaN      2.5\n",
              "max            NaN      3.0</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 10577);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MhYCG2vbsAdQ",
        "outputId": "98269280-36e4-47d4-d37c-da90c25552da"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4760, 21)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BccUoI8SsHhH",
        "outputId": "00db0a61-3302-4cb1-bb69-86210e1b5e9d"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Movie_ID', 'Movie_Title', 'Movie_Genre', 'Movie_Language',\n",
              "       'Movie_Budget', 'Movie_Popularity', 'Movie_Release_Date',\n",
              "       'Movie_Revenue', 'Movie_Runtime', 'Movie_Vote', 'Movie_Vote_Count',\n",
              "       'Movie_Homepage', 'Movie_Keywords', 'Movie_Overview',\n",
              "       'Movie_Production_House', 'Movie_Production_Country',\n",
              "       'Movie_Spoken_Language', 'Movie_Tagline', 'Movie_Cast', 'Movie_Crew',\n",
              "       'Movie_Director'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "FEATURES"
      ],
      "metadata": {
        "id": "cQPhGLzC83EN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.feature_extraction.text import TfidfVectorizer\n"
      ],
      "metadata": {
        "id": "OVY7cnaR88zG"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tf=TfidfVectorizer()\n",
        "x=df['Movie_Genre']\n"
      ],
      "metadata": {
        "id": "4sQSQ7xY9A9X"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=tf.fit_transform(x)\n"
      ],
      "metadata": {
        "id": "a7TxFTyP9JdO"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "x.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Xhk3Wb5q9QLR",
        "outputId": "9149cccd-2838-431a-e40c-2d44c22c82fd"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4760, 22)"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0yzME8zh9kAt",
        "outputId": "3116d038-76e4-4a1a-93eb-3069d2757345"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  (0, 3)\t0.567994993044323\n",
            "  (0, 4)\t0.8230320090230874\n",
            "  (1, 9)\t0.5472567572025355\n",
            "  (1, 17)\t0.5472567572025355\n",
            "  (1, 0)\t0.4142450317397563\n",
            "  (1, 1)\t0.4789792658051688\n",
            "  (2, 7)\t0.627239616473057\n",
            "  (2, 2)\t0.7788263372066537\n",
            "  (3, 16)\t0.7095830468532522\n",
            "  (3, 6)\t0.4588789948650055\n",
            "  (3, 3)\t0.5347167172345909\n",
            "  (4, 6)\t1.0\n",
            "  (5, 14)\t0.782002165752056\n",
            "  (5, 6)\t0.3176099072747343\n",
            "  (5, 4)\t0.536280299433075\n",
            "  (6, 18)\t0.3253553205418715\n",
            "  (6, 8)\t0.47881894745127623\n",
            "  (6, 9)\t0.4462328816161391\n",
            "  (6, 17)\t0.4462328816161391\n",
            "  (6, 0)\t0.3377751882924471\n",
            "  (6, 1)\t0.3905594498406914\n",
            "  (7, 6)\t0.3575069281897745\n",
            "  (7, 9)\t0.6603744378367137\n",
            "  (7, 17)\t0.6603744378367137\n",
            "  (8, 16)\t0.8397120676014654\n",
            "  :\t:\n",
            "  (4747, 18)\t0.5234538862407621\n",
            "  (4747, 0)\t0.5434358187009642\n",
            "  (4747, 4)\t0.6562572208610403\n",
            "  (4748, 6)\t1.0\n",
            "  (4749, 6)\t1.0\n",
            "  (4750, 12)\t1.0\n",
            "  (4751, 12)\t1.0\n",
            "  (4752, 11)\t0.6121933556529567\n",
            "  (4752, 20)\t0.6603136584009235\n",
            "  (4752, 6)\t0.25303971500984057\n",
            "  (4752, 0)\t0.35380230419162007\n",
            "  (4753, 6)\t1.0\n",
            "  (4754, 8)\t0.4758711037326812\n",
            "  (4754, 7)\t0.44802247438711246\n",
            "  (4754, 2)\t0.5562972961995059\n",
            "  (4754, 0)\t0.33569567896558106\n",
            "  (4754, 1)\t0.3881549747732799\n",
            "  (4755, 12)\t1.0\n",
            "  (4756, 6)\t0.4138017193773235\n",
            "  (4756, 7)\t0.7721795703632187\n",
            "  (4756, 3)\t0.4821896392023016\n",
            "  (4757, 18)\t0.8028801653734292\n",
            "  (4757, 6)\t0.5961404532909466\n",
            "  (4758, 7)\t1.0\n",
            "  (4759, 5)\t1.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "GET SIMILARTY SCORE USING COSINE SIMILARITY"
      ],
      "metadata": {
        "id": "t6ohPHV09tyM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics.pairwise import cosine_similarity\n"
      ],
      "metadata": {
        "id": "6ItzxlPZ91oh"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "similarity= cosine_similarity(x)"
      ],
      "metadata": {
        "id": "IQ3NYFmW-Hpz"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(similarity)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZDMjtmuq9_Je",
        "outputId": "4317f41b-d74f-43e8-fa48-8b0cf38f46e9"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[1.         0.         0.         ... 0.         0.         0.        ]\n",
            " [0.         1.         0.         ... 0.         0.         0.        ]\n",
            " [0.         0.         1.         ... 0.         0.62723962 0.        ]\n",
            " ...\n",
            " [0.         0.         0.         ... 1.         0.         0.        ]\n",
            " [0.         0.         0.62723962 ... 0.         1.         0.        ]\n",
            " [0.         0.         0.         ... 0.         0.         1.        ]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "similarity.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lkXy9Z_A-aLl",
        "outputId": "921ab304-d54d-4542-8e62-a3277a9f303b"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4760, 4760)"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**TESTING**"
      ],
      "metadata": {
        "id": "-MJ83998-wN6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fav_movie=input(\"enter your fav movie:\").strip()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7Xq2bvSD-yJC",
        "outputId": "06e6b55b-f594-45b7-d0bf-d110a6a7e152"
      },
      "execution_count": 30,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "enter your fav movie:avatttar\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "listmovie=df['Movie_Title'].tolist()"
      ],
      "metadata": {
        "id": "AhMkbrUN_HW6"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import difflib"
      ],
      "metadata": {
        "id": "dg1nHF-7_az3"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "recommended=difflib.get_close_matches(fav_movie,listmovie)"
      ],
      "metadata": {
        "id": "arVaflnz_kiG"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "index=df[df.Movie_Title == closestmatch]['Movie_ID'].values[0]"
      ],
      "metadata": {
        "id": "p58xFeopBQBU"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(recommended)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XdPrmGnV_yV2",
        "outputId": "196e9dae-2b7a-4401-d2de-ffb11ac7ca9b"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['Avatar']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "closestmatch=recommended[0]"
      ],
      "metadata": {
        "id": "KuGU4UGw_2BV"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**similarity score**"
      ],
      "metadata": {
        "id": "9OJHXcPsBMHb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "closestmatch"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "4__aSj-1OaVl",
        "outputId": "234c6dc2-e135-4c40-fc93-7b1a5f5795f4"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Avatar'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "index"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZHCS2S_DBsY6",
        "outputId": "52d007e8-1984-433e-eaf6-938d0fd70350"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2692"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "score=list(enumerate(similarity[index]))"
      ],
      "metadata": {
        "id": "BSKVSWleB_DI"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "score"
      ],
      "metadata": {
        "id": "0LHg3pd1CPpP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "39053a2b-6779-471f-fa46-d0bd4d44c058"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[(0, 0.583875513314773),\n",
              " (1, 0.0),\n",
              " (2, 0.0),\n",
              " (3, 0.1927986161492257),\n",
              " (4, 0.4201513216048248),\n",
              " (5, 0.5138922871093842),\n",
              " (6, 0.18410508450060364),\n",
              " (7, 0.15020700836181497),\n",
              " (8, 0.2281555701130624),\n",
              " (9, 0.0),\n",
              " (10, 0.5463997708973266),\n",
              " (11, 0.15034557489536654),\n",
              " (12, 0.15034557489536654),\n",
              " (13, 0.0),\n",
              " (14, 0.0),\n",
              " (15, 0.13145651668559796),\n",
              " (16, 0.7047857921491699),\n",
              " (17, 0.0),\n",
              " (18, 1.0000000000000002),\n",
              " (19, 0.0),\n",
              " (20, 0.4201513216048248),\n",
              " (21, 1.0000000000000002),\n",
              " (22, 0.0),\n",
              " (23, 0.13665113058974965),\n",
              " (24, 0.4201513216048248),\n",
              " (25, 0.14479358612098284),\n",
              " (26, 0.4201513216048248),\n",
              " (27, 0.22719669197542222),\n",
              " (28, 0.0),\n",
              " (29, 0.2281555701130624),\n",
              " (30, 0.3065591246793501),\n",
              " (31, 0.38081784061305546),\n",
              " (32, 0.12431809226829804),\n",
              " (33, 0.2281555701130624),\n",
              " (34, 0.7047857921491699),\n",
              " (35, 0.0),\n",
              " (36, 0.0),\n",
              " (37, 0.0),\n",
              " (38, 0.4824765370565067),\n",
              " (39, 0.20970750355439477),\n",
              " (40, 0.4824765370565067),\n",
              " (41, 0.1780441361005807),\n",
              " (42, 0.583875513314773),\n",
              " (43, 0.8245023470136082),\n",
              " (44, 0.5413794213254587),\n",
              " (45, 0.0),\n",
              " (46, 0.20970750355439477),\n",
              " (47, 0.907454057764755),\n",
              " (48, 0.8622265148955368),\n",
              " (49, 0.0),\n",
              " (50, 0.583875513314773),\n",
              " (51, 0.8385597416532798),\n",
              " (52, 0.7012988244541298),\n",
              " (53, 0.0),\n",
              " (54, 0.0),\n",
              " (55, 0.0),\n",
              " (56, 0.0),\n",
              " (57, 0.0),\n",
              " (58, 0.0),\n",
              " (59, 0.0),\n",
              " (60, 0.14262873701395096),\n",
              " (61, 0.1378121690542703),\n",
              " (62, 0.2281555701130624),\n",
              " (63, 0.148919646107351),\n",
              " (64, 0.0),\n",
              " (65, 0.0),\n",
              " (66, 0.4201513216048248),\n",
              " (67, 0.20970750355439477),\n",
              " (68, 0.8622265148955368),\n",
              " (69, 0.20970750355439477),\n",
              " (70, 0.907454057764755),\n",
              " (71, 0.15529550115732185),\n",
              " (72, 0.907454057764755),\n",
              " (73, 0.0),\n",
              " (74, 0.15020700836181497),\n",
              " (75, 0.0),\n",
              " (76, 0.23415464727412472),\n",
              " (77, 0.21917041055208134),\n",
              " (78, 0.20970750355439477),\n",
              " (79, 0.13004738220141465),\n",
              " (80, 0.20970750355439477),\n",
              " (81, 0.3667052265506215),\n",
              " (82, 0.2736199937911261),\n",
              " (83, 0.907454057764755),\n",
              " (84, 0.1970414962802812),\n",
              " (85, 0.3876853334756331),\n",
              " (86, 0.46626110518344044),\n",
              " (87, 0.7514869502857859),\n",
              " (88, 0.7617629619652846),\n",
              " (89, 0.907454057764755),\n",
              " (90, 0.20970750355439477),\n",
              " (91, 0.0),\n",
              " (92, 0.10631497067989275),\n",
              " (93, 0.20970750355439477),\n",
              " (94, 0.20970750355439477),\n",
              " (95, 0.20970750355439477),\n",
              " (96, 0.8245023470136082),\n",
              " (97, 0.11366692118716612),\n",
              " (98, 0.4201513216048248),\n",
              " (99, 0.6878993572639702),\n",
              " (100, 0.0),\n",
              " (101, 0.0),\n",
              " (102, 0.23415464727412472),\n",
              " (103, 0.1927986161492257),\n",
              " (104, 0.1813731807713378),\n",
              " (105, 0.8245023470136082),\n",
              " (106, 0.8245023470136082),\n",
              " (107, 0.7047857921491699),\n",
              " (108, 0.8245023470136082),\n",
              " (109, 0.8245023470136082),\n",
              " (110, 0.0),\n",
              " (111, 0.8245023470136082),\n",
              " (112, 1.0000000000000002),\n",
              " (113, 0.1277818410228055),\n",
              " (114, 0.1927986161492257),\n",
              " (115, 0.2736199937911261),\n",
              " (116, 0.32177009139991164),\n",
              " (117, 0.0),\n",
              " (118, 0.3016556598097263),\n",
              " (119, 0.1780441361005807),\n",
              " (120, 0.5974918773976983),\n",
              " (121, 0.2281555701130624),\n",
              " (122, 0.0),\n",
              " (123, 0.6714913379551536),\n",
              " (124, 1.0000000000000002),\n",
              " (125, 0.2746871206041339),\n",
              " (126, 0.8245023470136082),\n",
              " (127, 0.11690979674299005),\n",
              " (128, 0.23415464727412472),\n",
              " (129, 0.1927986161492257),\n",
              " (130, 0.0),\n",
              " (131, 0.0),\n",
              " (132, 0.2281555701130624),\n",
              " (133, 0.0),\n",
              " (134, 0.0),\n",
              " (135, 0.23415464727412472),\n",
              " (136, 0.1378121690542703),\n",
              " (137, 0.907454057764755),\n",
              " (138, 0.907454057764755),\n",
              " (139, 0.4824765370565067),\n",
              " (140, 0.4201513216048248),\n",
              " (141, 0.0),\n",
              " (142, 0.8245023470136082),\n",
              " (143, 0.5463997708973266),\n",
              " (144, 0.6529153803670847),\n",
              " (145, 0.6521910775661488),\n",
              " (146, 0.0),\n",
              " (147, 0.7514869502857859),\n",
              " (148, 0.6175457622364403),\n",
              " (149, 1.0000000000000002),\n",
              " (150, 0.0),\n",
              " (151, 0.0),\n",
              " (152, 0.20970750355439477),\n",
              " (153, 0.0),\n",
              " (154, 0.4201513216048248),\n",
              " (155, 0.0),\n",
              " (156, 0.1927986161492257),\n",
              " (157, 0.2736199937911261),\n",
              " (158, 0.1813731807713378),\n",
              " (159, 0.2444150400336092),\n",
              " (160, 0.2033463939392786),\n",
              " (161, 0.1927986161492257),\n",
              " (162, 0.0),\n",
              " (163, 0.0),\n",
              " (164, 0.4201513216048248),\n",
              " (165, 0.09839948991327892),\n",
              " (166, 1.0000000000000002),\n",
              " (167, 0.4201513216048248),\n",
              " (168, 0.0),\n",
              " (169, 0.1927986161492257),\n",
              " (170, 0.7617629619652846),\n",
              " (171, 0.0),\n",
              " (172, 0.8245023470136082),\n",
              " (173, 0.8245023470136082),\n",
              " (174, 0.1927986161492257),\n",
              " (175, 0.2736199937911261),\n",
              " (176, 0.4201513216048248),\n",
              " (177, 0.0),\n",
              " (178, 0.13154936915041948),\n",
              " (179, 0.0),\n",
              " (180, 0.40530495837753455),\n",
              " (181, 0.40530495837753455),\n",
              " (182, 0.18843348142492838),\n",
              " (183, 0.15034557489536654),\n",
              " (184, 0.11366692118716612),\n",
              " (185, 0.0),\n",
              " (186, 0.0),\n",
              " (187, 0.2113343685071608),\n",
              " (188, 0.0),\n",
              " (189, 0.20970750355439477),\n",
              " (190, 1.0000000000000002),\n",
              " (191, 0.17975596508300082),\n",
              " (192, 0.2281555701130624),\n",
              " (193, 0.2281555701130624),\n",
              " (194, 0.2281555701130624),\n",
              " (195, 0.1927986161492257),\n",
              " (196, 0.4201513216048248),\n",
              " (197, 0.1277818410228055),\n",
              " (198, 0.2281555701130624),\n",
              " (199, 1.0000000000000002),\n",
              " (200, 0.44120966393682026),\n",
              " (201, 0.6449981645934193),\n",
              " (202, 0.1927986161492257),\n",
              " (203, 0.4201513216048248),\n",
              " (204, 0.16757343279053877),\n",
              " (205, 0.0),\n",
              " (206, 0.5800980625456084),\n",
              " (207, 0.907454057764755),\n",
              " (208, 0.43511507076596534),\n",
              " (209, 0.8245023470136082),\n",
              " (210, 0.8622265148955368),\n",
              " (211, 0.1927986161492257),\n",
              " (212, 0.1927986161492257),\n",
              " (213, 0.4201513216048248),\n",
              " (214, 0.0),\n",
              " (215, 0.14662368428624792),\n",
              " (216, 0.8245023470136082),\n",
              " (217, 0.3425778711321785),\n",
              " (218, 0.1333078392052627),\n",
              " (219, 0.0),\n",
              " (220, 0.23415464727412472),\n",
              " (221, 0.13665113058974965),\n",
              " (222, 0.472265187178681),\n",
              " (223, 0.0),\n",
              " (224, 0.2281555701130624),\n",
              " (225, 0.0),\n",
              " (226, 0.4201513216048248),\n",
              " (227, 0.2281555701130624),\n",
              " (228, 0.16049306226978435),\n",
              " (229, 0.4201513216048248),\n",
              " (230, 0.0),\n",
              " (231, 0.0),\n",
              " (232, 0.0),\n",
              " (233, 0.3925596102177653),\n",
              " (234, 0.20970750355439477),\n",
              " (235, 0.4201513216048248),\n",
              " (236, 0.7514869502857859),\n",
              " (237, 0.0),\n",
              " (238, 0.4153931693167142),\n",
              " (239, 0.27147647258945606),\n",
              " (240, 0.3320755897612702),\n",
              " (241, 0.36218095138705925),\n",
              " (242, 0.12030768867965337),\n",
              " (243, 0.7047857921491699),\n",
              " (244, 0.7617629619652846),\n",
              " (245, 0.0),\n",
              " (246, 0.2736199937911261),\n",
              " (247, 0.15298694294248064),\n",
              " (248, 0.0),\n",
              " (249, 0.4201513216048248),\n",
              " (250, 0.3065591246793501),\n",
              " (251, 0.5644388622118346),\n",
              " (252, 0.10919851448065743),\n",
              " (253, 0.2736199937911261),\n",
              " (254, 0.8245023470136082),\n",
              " (255, 0.518199417059322),\n",
              " (256, 0.8245023470136082),\n",
              " (257, 0.0),\n",
              " (258, 0.0),\n",
              " (259, 0.0),\n",
              " (260, 0.20970750355439477),\n",
              " (261, 0.20970750355439477),\n",
              " (262, 0.4201513216048248),\n",
              " (263, 0.0),\n",
              " (264, 0.0),\n",
              " (265, 0.0),\n",
              " (266, 0.36274597594297037),\n",
              " (267, 0.11366692118716612),\n",
              " (268, 0.4201513216048248),\n",
              " (269, 0.10631497067989275),\n",
              " (270, 0.5644388622118346),\n",
              " (271, 0.3251299342437633),\n",
              " (272, 0.0),\n",
              " (273, 0.24554429453440887),\n",
              " (274, 0.8245023470136082),\n",
              " (275, 0.0),\n",
              " (276, 1.0000000000000002),\n",
              " (277, 0.0),\n",
              " (278, 0.1927986161492257),\n",
              " (279, 0.1927986161492257),\n",
              " (280, 0.8245023470136082),\n",
              " (281, 0.8245023470136082),\n",
              " (282, 0.37836410033069096),\n",
              " (283, 0.13004738220141465),\n",
              " (284, 0.3016556598097263),\n",
              " (285, 0.8245023470136082),\n",
              " (286, 0.13013727856108082),\n",
              " (287, 0.8245023470136082),\n",
              " (288, 0.3016556598097263),\n",
              " (289, 0.3016556598097263),\n",
              " (290, 0.3016556598097263),\n",
              " (291, 0.6878993572639702),\n",
              " (292, 0.1780441361005807),\n",
              " (293, 0.4201513216048248),\n",
              " (294, 0.3016556598097263),\n",
              " (295, 0.3016556598097263),\n",
              " (296, 0.3911591963692266),\n",
              " (297, 0.0),\n",
              " (298, 0.0),\n",
              " (299, 0.0),\n",
              " (300, 0.0),\n",
              " (301, 0.0),\n",
              " (302, 0.0),\n",
              " (303, 0.2033463939392786),\n",
              " (304, 0.907454057764755),\n",
              " (305, 0.3016556598097263),\n",
              " (306, 0.3016556598097263),\n",
              " (307, 0.12033720983224261),\n",
              " (308, 0.4201513216048248),\n",
              " (309, 0.2281555701130624),\n",
              " (310, 0.3016556598097263),\n",
              " (311, 0.4327498043306492),\n",
              " (312, 0.0),\n",
              " (313, 0.3320755897612702),\n",
              " (314, 0.20970750355439477),\n",
              " (315, 0.3016556598097263),\n",
              " (316, 0.3016556598097263),\n",
              " (317, 0.4201513216048248),\n",
              " (318, 0.1927986161492257),\n",
              " (319, 0.0),\n",
              " (320, 0.3016556598097263),\n",
              " (321, 0.3016556598097263),\n",
              " (322, 0.3016556598097263),\n",
              " (323, 0.3016556598097263),\n",
              " (324, 0.4201513216048248),\n",
              " (325, 0.1927986161492257),\n",
              " (326, 0.2281555701130624),\n",
              " (327, 0.3016556598097263),\n",
              " (328, 0.0),\n",
              " (329, 0.44120966393682026),\n",
              " (330, 0.16049306226978435),\n",
              " (331, 0.0),\n",
              " (332, 0.2746871206041339),\n",
              " (333, 0.5345412954993455),\n",
              " (334, 0.6175457622364403),\n",
              " (335, 0.0),\n",
              " (336, 0.0),\n",
              " (337, 0.0),\n",
              " (338, 0.0),\n",
              " (339, 0.0),\n",
              " (340, 0.0),\n",
              " (341, 0.24554429453440887),\n",
              " (342, 0.8245023470136082),\n",
              " (343, 0.13154936915041948),\n",
              " (344, 0.0),\n",
              " (345, 0.3731489877297615),\n",
              " (346, 0.2736199937911261),\n",
              " (347, 0.1942301341040154),\n",
              " (348, 0.16049306226978435),\n",
              " (349, 0.1581017841542247),\n",
              " (350, 0.4776341062173869),\n",
              " (351, 0.17385933927873132),\n",
              " (352, 0.0),\n",
              " (353, 0.13445539640916665),\n",
              " (354, 0.3320755897612702),\n",
              " (355, 0.15529550115732185),\n",
              " (356, 0.518199417059322),\n",
              " (357, 0.1387653127678244),\n",
              " (358, 0.2281555701130624),\n",
              " (359, 0.14147944497382994),\n",
              " (360, 0.6521910775661488),\n",
              " (361, 0.0),\n",
              " (362, 0.0),\n",
              " (363, 0.0),\n",
              " (364, 0.13004738220141465),\n",
              " (365, 0.0),\n",
              " (366, 0.0),\n",
              " (367, 0.36062591863556764),\n",
              " (368, 0.32425657528577095),\n",
              " (369, 0.36062591863556764),\n",
              " (370, 1.0000000000000002),\n",
              " (371, 0.4015784547713934),\n",
              " (372, 0.16049306226978435),\n",
              " (373, 0.13665113058974965),\n",
              " (374, 0.11366692118716612),\n",
              " (375, 0.19998864075911046),\n",
              " (376, 0.0),\n",
              " (377, 0.2736199937911261),\n",
              " (378, 0.15020700836181497),\n",
              " (379, 0.0),\n",
              " (380, 0.2113343685071608),\n",
              " (381, 0.0),\n",
              " (382, 0.0),\n",
              " (383, 0.0),\n",
              " (384, 0.0),\n",
              " (385, 0.3691621472653379),\n",
              " (386, 0.0),\n",
              " (387, 0.11366692118716612),\n",
              " (388, 0.2281555701130624),\n",
              " (389, 0.2593019961667207),\n",
              " (390, 0.0),\n",
              " (391, 0.0),\n",
              " (392, 0.0),\n",
              " (393, 0.0),\n",
              " (394, 0.0),\n",
              " (395, 0.4201513216048248),\n",
              " (396, 0.8245023470136082),\n",
              " (397, 0.20970750355439477),\n",
              " (398, 0.0),\n",
              " (399, 0.4201513216048248),\n",
              " (400, 0.16049306226978435),\n",
              " (401, 0.0),\n",
              " (402, 0.4201513216048248),\n",
              " (403, 0.13818632521419028),\n",
              " (404, 0.0),\n",
              " (405, 0.0),\n",
              " (406, 0.518199417059322),\n",
              " (407, 0.13154936915041948),\n",
              " (408, 0.6476057520027616),\n",
              " (409, 0.0),\n",
              " (410, 0.13818632521419028),\n",
              " (411, 0.0),\n",
              " (412, 0.4201513216048248),\n",
              " (413, 0.0),\n",
              " (414, 0.0),\n",
              " (415, 0.0),\n",
              " (416, 0.1387653127678244),\n",
              " (417, 0.6022353998973401),\n",
              " (418, 0.6022353998973401),\n",
              " (419, 0.10414134070842193),\n",
              " (420, 0.3320755897612702),\n",
              " (421, 0.0),\n",
              " (422, 0.0),\n",
              " (423, 0.0),\n",
              " (424, 0.3016556598097263),\n",
              " (425, 0.3016556598097263),\n",
              " (426, 0.3016556598097263),\n",
              " (427, 0.0),\n",
              " (428, 0.13655225253436953),\n",
              " (429, 0.7514869502857859),\n",
              " (430, 0.10774701756970638),\n",
              " (431, 0.1927986161492257),\n",
              " (432, 0.4201513216048248),\n",
              " (433, 0.44120966393682026),\n",
              " (434, 0.18925467779751348),\n",
              " (435, 0.7617629619652846),\n",
              " (436, 0.44120966393682026),\n",
              " (437, 0.19845441739269654),\n",
              " (438, 0.2113343685071608),\n",
              " (439, 0.0),\n",
              " (440, 0.0),\n",
              " (441, 0.11366692118716612),\n",
              " (442, 0.5413794213254587),\n",
              " (443, 0.44120966393682026),\n",
              " (444, 0.4201513216048248),\n",
              " (445, 0.4201513216048248),\n",
              " (446, 0.4201513216048248),\n",
              " (447, 1.0000000000000002),\n",
              " (448, 0.2281555701130624),\n",
              " (449, 0.4201513216048248),\n",
              " (450, 1.0000000000000002),\n",
              " (451, 0.228226664079399),\n",
              " (452, 0.11941923392448542),\n",
              " (453, 0.12511504421872643),\n",
              " (454, 0.0),\n",
              " (455, 0.2281555701130624),\n",
              " (456, 0.14262873701395096),\n",
              " (457, 0.15772520913358157),\n",
              " (458, 0.8622265148955368),\n",
              " (459, 0.0),\n",
              " (460, 0.2593019961667207),\n",
              " (461, 0.0),\n",
              " (462, 0.0),\n",
              " (463, 1.0000000000000002),\n",
              " (464, 0.2281555701130624),\n",
              " (465, 0.2281555701130624),\n",
              " (466, 0.4201513216048248),\n",
              " (467, 0.2098220485737594),\n",
              " (468, 0.2098220485737594),\n",
              " (469, 0.2098220485737594),\n",
              " (470, 0.5413794213254587),\n",
              " (471, 0.1927986161492257),\n",
              " (472, 0.11730328365402887),\n",
              " (473, 0.2736199937911261),\n",
              " (474, 0.46626110518344044),\n",
              " (475, 0.2281555701130624),\n",
              " (476, 0.4201513216048248),\n",
              " (477, 0.0),\n",
              " (478, 0.4201513216048248),\n",
              " (479, 0.7089370216032753),\n",
              " (480, 0.12263251823342124),\n",
              " (481, 1.0000000000000002),\n",
              " (482, 0.44120966393682026),\n",
              " (483, 0.5800980625456084),\n",
              " (484, 0.0),\n",
              " (485, 0.8245023470136082),\n",
              " (486, 0.0),\n",
              " (487, 0.14369193776914435),\n",
              " (488, 0.13818632521419028),\n",
              " (489, 0.2281555701130624),\n",
              " (490, 0.2281555701130624),\n",
              " (491, 0.0),\n",
              " (492, 0.0),\n",
              " (493, 0.39119048108925514),\n",
              " (494, 0.4824765370565067),\n",
              " (495, 0.1601401525434569),\n",
              " (496, 0.09839948991327892),\n",
              " (497, 0.0),\n",
              " (498, 0.0),\n",
              " (499, 0.4201513216048248),\n",
              " (500, 0.7617629619652846),\n",
              " (501, 0.6449981645934193),\n",
              " (502, 1.0000000000000002),\n",
              " (503, 0.583875513314773),\n",
              " (504, 0.1927986161492257),\n",
              " (505, 0.2736199937911261),\n",
              " (506, 0.0),\n",
              " (507, 0.2736199937911261),\n",
              " (508, 0.2736199937911261),\n",
              " (509, 0.326757023211668),\n",
              " (510, 0.1927986161492257),\n",
              " (511, 0.21917041055208134),\n",
              " (512, 0.3925596102177653),\n",
              " (513, 0.3925596102177653),\n",
              " (514, 0.3925596102177653),\n",
              " (515, 0.4449015825206608),\n",
              " (516, 0.0),\n",
              " (517, 0.0),\n",
              " (518, 0.4201513216048248),\n",
              " (519, 0.43511507076596534),\n",
              " (520, 0.0),\n",
              " (521, 0.0),\n",
              " (522, 0.14487351454350908),\n",
              " (523, 0.3065591246793501),\n",
              " (524, 0.2281555701130624),\n",
              " (525, 0.0),\n",
              " (526, 0.4201513216048248),\n",
              " (527, 0.4201513216048248),\n",
              " (528, 0.0),\n",
              " (529, 0.0),\n",
              " (530, 0.907454057764755),\n",
              " (531, 0.0),\n",
              " (532, 0.6939130705053973),\n",
              " (533, 0.8622265148955368),\n",
              " (534, 0.8622265148955368),\n",
              " (535, 0.0),\n",
              " (536, 0.0),\n",
              " (537, 0.20970750355439477),\n",
              " (538, 0.0),\n",
              " (539, 0.4397517875495551),\n",
              " (540, 0.3016556598097263),\n",
              " (541, 0.4201513216048248),\n",
              " (542, 0.687474775506141),\n",
              " (543, 1.0000000000000002),\n",
              " (544, 0.8245023470136082),\n",
              " (545, 0.0),\n",
              " (546, 0.0),\n",
              " (547, 0.6476057520027616),\n",
              " (548, 0.0),\n",
              " (549, 0.0),\n",
              " (550, 0.3016556598097263),\n",
              " (551, 0.1581017841542247),\n",
              " (552, 0.0),\n",
              " (553, 0.0),\n",
              " (554, 0.0),\n",
              " (555, 0.0),\n",
              " (556, 0.0),\n",
              " (557, 0.0),\n",
              " (558, 0.5986873724349902),\n",
              " (559, 0.3320755897612702),\n",
              " (560, 0.7617629619652846),\n",
              " (561, 0.0),\n",
              " (562, 0.7047857921491699),\n",
              " (563, 0.7047857921491699),\n",
              " (564, 0.13818632521419028),\n",
              " (565, 0.0),\n",
              " (566, 0.5138922871093842),\n",
              " (567, 0.0),\n",
              " (568, 0.0),\n",
              " (569, 0.0),\n",
              " (570, 0.0),\n",
              " (571, 0.7047857921491699),\n",
              " (572, 0.0),\n",
              " (573, 0.0),\n",
              " (574, 0.0),\n",
              " (575, 0.0),\n",
              " (576, 0.11681907857618115),\n",
              " (577, 0.0),\n",
              " (578, 0.1581017841542247),\n",
              " (579, 0.1927986161492257),\n",
              " (580, 0.3625610983349477),\n",
              " (581, 0.7047857921491699),\n",
              " (582, 0.0),\n",
              " (583, 0.0),\n",
              " (584, 1.0000000000000002),\n",
              " (585, 0.0),\n",
              " (586, 0.0),\n",
              " (587, 0.2281555701130624),\n",
              " (588, 0.15085130174813394),\n",
              " (589, 0.1927986161492257),\n",
              " (590, 0.4015784547713934),\n",
              " (591, 0.0),\n",
              " (592, 0.0),\n",
              " (593, 0.16049306226978435),\n",
              " (594, 0.18843348142492838),\n",
              " (595, 0.3925596102177653),\n",
              " (596, 0.16049306226978435),\n",
              " (597, 0.4201513216048248),\n",
              " (598, 0.16049306226978435),\n",
              " (599, 0.0),\n",
              " (600, 0.0),\n",
              " (601, 0.0),\n",
              " (602, 0.0),\n",
              " (603, 0.0),\n",
              " (604, 1.0000000000000002),\n",
              " (605, 0.1927986161492257),\n",
              " (606, 0.29197757981167904),\n",
              " (607, 0.13818632521419028),\n",
              " (608, 0.4228041700662818),\n",
              " (609, 0.1927986161492257),\n",
              " (610, 0.0),\n",
              " (611, 0.4201513216048248),\n",
              " (612, 0.2281555701130624),\n",
              " (613, 0.0),\n",
              " (614, 0.13435625814607735),\n",
              " (615, 0.0),\n",
              " (616, 0.1581017841542247),\n",
              " (617, 0.3625610983349477),\n",
              " (618, 0.0),\n",
              " (619, 0.2033463939392786),\n",
              " (620, 0.4201513216048248),\n",
              " (621, 0.7617629619652846),\n",
              " (622, 0.7514869502857859),\n",
              " (623, 0.2281555701130624),\n",
              " (624, 0.4201513216048248),\n",
              " (625, 0.2593019961667207),\n",
              " (626, 0.16049306226978435),\n",
              " (627, 0.14873267016748185),\n",
              " (628, 0.7047857921491699),\n",
              " (629, 0.48322210319175696),\n",
              " (630, 0.0),\n",
              " (631, 0.09839948991327892),\n",
              " (632, 0.3119320470039013),\n",
              " (633, 0.24554429453440887),\n",
              " (634, 0.3320755897612702),\n",
              " (635, 0.23733230442583222),\n",
              " (636, 0.44120966393682026),\n",
              " (637, 0.7047857921491699),\n",
              " (638, 0.2281555701130624),\n",
              " (639, 0.23733230442583222),\n",
              " (640, 0.23733230442583222),\n",
              " (641, 0.15772520913358157),\n",
              " (642, 0.7047857921491699),\n",
              " (643, 1.0000000000000002),\n",
              " (644, 0.35503489079268225),\n",
              " (645, 0.4201513216048248),\n",
              " (646, 0.16648745740149773),\n",
              " (647, 0.4201513216048248),\n",
              " (648, 0.0),\n",
              " (649, 0.0),\n",
              " (650, 0.0),\n",
              " (651, 0.10631497067989275),\n",
              " (652, 0.7514869502857859),\n",
              " (653, 0.8622265148955368),\n",
              " (654, 0.5913210892731544),\n",
              " (655, 0.15085130174813394),\n",
              " (656, 0.0),\n",
              " (657, 0.12938852843760973),\n",
              " (658, 0.0),\n",
              " (659, 0.2736199937911261),\n",
              " (660, 0.38214228299382375),\n",
              " (661, 0.23245054316693553),\n",
              " (662, 0.0),\n",
              " (663, 0.0),\n",
              " (664, 0.583875513314773),\n",
              " (665, 0.0),\n",
              " (666, 0.20970750355439477),\n",
              " (667, 0.7986343033237389),\n",
              " (668, 0.7617629619652846),\n",
              " (669, 0.8622265148955368),\n",
              " (670, 0.5413794213254587),\n",
              " (671, 0.0),\n",
              " (672, 0.20231323614354313),\n",
              " (673, 0.8622265148955368),\n",
              " (674, 0.0),\n",
              " (675, 1.0000000000000002),\n",
              " (676, 0.7514869502857859),\n",
              " (677, 0.0),\n",
              " (678, 0.7986343033237389),\n",
              " (679, 0.0),\n",
              " (680, 0.4201513216048248),\n",
              " (681, 0.0),\n",
              " (682, 0.7617629619652846),\n",
              " (683, 0.6714913379551536),\n",
              " (684, 0.4612636028487691),\n",
              " (685, 0.5658585333535687),\n",
              " (686, 0.0),\n",
              " (687, 0.3365822133770827),\n",
              " (688, 0.5413794213254587),\n",
              " (689, 0.7047857921491699),\n",
              " (690, 0.3365822133770827),\n",
              " (691, 0.2736199937911261),\n",
              " (692, 0.6449981645934193),\n",
              " (693, 0.13818632521419028),\n",
              " (694, 0.7047857921491699),\n",
              " (695, 0.6521910775661488),\n",
              " (696, 0.30051650091552534),\n",
              " (697, 0.1927986161492257),\n",
              " (698, 0.2281555701130624),\n",
              " (699, 0.0),\n",
              " (700, 0.0),\n",
              " (701, 0.7514869502857859),\n",
              " (702, 0.0),\n",
              " (703, 0.12048793323174492),\n",
              " (704, 0.0),\n",
              " (705, 0.2281555701130624),\n",
              " (706, 0.4201513216048248),\n",
              " (707, 0.14662368428624792),\n",
              " (708, 0.0),\n",
              " (709, 0.0),\n",
              " (710, 0.0),\n",
              " (711, 0.0),\n",
              " (712, 0.10798971562600349),\n",
              " (713, 0.0),\n",
              " (714, 0.0),\n",
              " (715, 0.1363346886223104),\n",
              " (716, 0.43511507076596534),\n",
              " (717, 0.4201513216048248),\n",
              " (718, 0.0),\n",
              " (719, 0.3911591963692266),\n",
              " (720, 0.0),\n",
              " (721, 0.16049306226978435),\n",
              " (722, 0.16049306226978435),\n",
              " (723, 0.3925596102177653),\n",
              " (724, 0.0),\n",
              " (725, 0.0),\n",
              " (726, 0.0),\n",
              " (727, 0.3911591963692266),\n",
              " (728, 0.5413794213254587),\n",
              " (729, 0.3911591963692266),\n",
              " (730, 0.0),\n",
              " (731, 0.4201513216048248),\n",
              " (732, 0.7047857921491699),\n",
              " (733, 0.3408729295715863),\n",
              " (734, 0.15034557489536654),\n",
              " (735, 0.1927986161492257),\n",
              " (736, 0.0),\n",
              " (737, 0.1927986161492257),\n",
              " (738, 0.3925596102177653),\n",
              " (739, 0.14147944497382994),\n",
              " (740, 0.2736199937911261),\n",
              " (741, 0.0),\n",
              " (742, 0.44120966393682026),\n",
              " (743, 0.7047857921491699),\n",
              " (744, 0.3625610983349477),\n",
              " (745, 0.289426163646459),\n",
              " (746, 0.0),\n",
              " (747, 0.0),\n",
              " (748, 0.0),\n",
              " (749, 0.1415664400575078),\n",
              " (750, 0.3159229682943087),\n",
              " (751, 0.0),\n",
              " (752, 0.0),\n",
              " (753, 0.7617629619652846),\n",
              " (754, 0.0),\n",
              " (755, 0.2736199937911261),\n",
              " (756, 0.20970750355439477),\n",
              " (757, 0.7089370216032753),\n",
              " (758, 0.0),\n",
              " (759, 0.2736199937911261),\n",
              " (760, 0.5482483129822032),\n",
              " (761, 0.7047857921491699),\n",
              " (762, 0.23415464727412472),\n",
              " (763, 0.0),\n",
              " (764, 0.0),\n",
              " (765, 0.3065591246793501),\n",
              " (766, 0.4201513216048248),\n",
              " (767, 0.4201513216048248),\n",
              " (768, 0.0),\n",
              " (769, 0.38081784061305546),\n",
              " (770, 0.0),\n",
              " (771, 0.0),\n",
              " (772, 0.0),\n",
              " (773, 0.0),\n",
              " (774, 0.2281555701130624),\n",
              " (775, 0.36218095138705925),\n",
              " (776, 0.0),\n",
              " (777, 0.4201513216048248),\n",
              " (778, 0.0),\n",
              " (779, 0.2746871206041339),\n",
              " (780, 0.0),\n",
              " (781, 0.0),\n",
              " (782, 0.4201513216048248),\n",
              " (783, 0.13154936915041948),\n",
              " (784, 0.0),\n",
              " (785, 0.0),\n",
              " (786, 0.0),\n",
              " (787, 0.2736199937911261),\n",
              " (788, 0.2736199937911261),\n",
              " (789, 0.0),\n",
              " (790, 0.6521910775661488),\n",
              " (791, 0.4201513216048248),\n",
              " (792, 0.519393454044119),\n",
              " (793, 0.2739221754888949),\n",
              " (794, 0.1338655541211392),\n",
              " (795, 0.40953546252894824),\n",
              " (796, 0.13154936915041948),\n",
              " (797, 0.0),\n",
              " (798, 0.16049306226978435),\n",
              " (799, 1.0000000000000002),\n",
              " (800, 0.3474424522383497),\n",
              " (801, 0.6521910775661488),\n",
              " (802, 0.20363111691719715),\n",
              " (803, 0.3925596102177653),\n",
              " (804, 0.3474424522383497),\n",
              " (805, 0.4201513216048248),\n",
              " (806, 0.5644388622118346),\n",
              " (807, 0.0),\n",
              " (808, 0.44120966393682026),\n",
              " (809, 0.3925596102177653),\n",
              " (810, 0.24554429453440887),\n",
              " (811, 0.24554429453440887),\n",
              " (812, 0.0),\n",
              " (813, 0.2281555701130624),\n",
              " (814, 0.0),\n",
              " (815, 0.11366692118716612),\n",
              " (816, 0.5644388622118346),\n",
              " (817, 0.4201513216048248),\n",
              " (818, 0.1581017841542247),\n",
              " (819, 0.0),\n",
              " (820, 0.0),\n",
              " (821, 0.0),\n",
              " (822, 0.0),\n",
              " (823, 0.4201513216048248),\n",
              " (824, 0.17385933927873132),\n",
              " (825, 0.7617629619652846),\n",
              " (826, 0.12431809226829804),\n",
              " (827, 0.7617629619652846),\n",
              " (828, 0.8245023470136082),\n",
              " (829, 1.0000000000000002),\n",
              " (830, 0.2281555701130624),\n",
              " (831, 0.7047857921491699),\n",
              " (832, 0.44120966393682026),\n",
              " (833, 0.3667052265506215),\n",
              " (834, 0.0),\n",
              " (835, 0.0),\n",
              " (836, 0.0),\n",
              " (837, 0.0),\n",
              " (838, 0.2281555701130624),\n",
              " (839, 0.0),\n",
              " (840, 0.0),\n",
              " (841, 0.0),\n",
              " (842, 0.6022353998973401),\n",
              " (843, 0.2281555701130624),\n",
              " (844, 0.2281555701130624),\n",
              " (845, 0.5413794213254587),\n",
              " (846, 0.0),\n",
              " (847, 0.1927986161492257),\n",
              " (848, 0.2444150400336092),\n",
              " (849, 0.22309692188079755),\n",
              " (850, 0.16049306226978435),\n",
              " (851, 0.48580949887259983),\n",
              " (852, 0.1173692441370813),\n",
              " (853, 1.0000000000000002),\n",
              " (854, 0.12369462369294491),\n",
              " (855, 0.3320755897612702),\n",
              " (856, 0.12431809226829804),\n",
              " (857, 0.13818632521419028),\n",
              " (858, 0.16049306226978435),\n",
              " (859, 0.0),\n",
              " (860, 1.0000000000000002),\n",
              " (861, 0.7047857921491699),\n",
              " (862, 0.583875513314773),\n",
              " (863, 0.7047857921491699),\n",
              " (864, 0.5644388622118346),\n",
              " (865, 0.2281555701130624),\n",
              " (866, 0.8622265148955368),\n",
              " (867, 0.1927986161492257),\n",
              " (868, 0.5413794213254587),\n",
              " (869, 0.4824765370565067),\n",
              " (870, 0.7514869502857859),\n",
              " (871, 0.12094967453494142),\n",
              " (872, 0.11330384026365123),\n",
              " (873, 0.0),\n",
              " (874, 0.8245023470136082),\n",
              " (875, 0.6449981645934193),\n",
              " (876, 1.0000000000000002),\n",
              " (877, 0.2593019961667207),\n",
              " (878, 0.8622265148955368),\n",
              " (879, 0.775729347400482),\n",
              " (880, 0.32177009139991164),\n",
              " (881, 0.0),\n",
              " (882, 0.0),\n",
              " (883, 0.1927986161492257),\n",
              " (884, 0.2736199937911261),\n",
              " (885, 0.1927986161492257),\n",
              " (886, 0.2736199937911261),\n",
              " (887, 0.18925467779751348),\n",
              " (888, 1.0000000000000002),\n",
              " (889, 0.4201513216048248),\n",
              " (890, 0.1927986161492257),\n",
              " (891, 0.23415464727412472),\n",
              " (892, 0.0),\n",
              " (893, 0.3320755897612702),\n",
              " (894, 0.8245023470136082),\n",
              " (895, 0.4201513216048248),\n",
              " (896, 0.7514869502857859),\n",
              " (897, 0.2281555701130624),\n",
              " (898, 0.2960935094772184),\n",
              " (899, 0.4201513216048248),\n",
              " (900, 0.7047857921491699),\n",
              " (901, 0.4201513216048248),\n",
              " (902, 0.18179810923000367),\n",
              " (903, 0.12233343070589432),\n",
              " (904, 0.6939130705053973),\n",
              " (905, 0.6939130705053973),\n",
              " (906, 0.0),\n",
              " (907, 0.1927986161492257),\n",
              " (908, 0.3691365354567414),\n",
              " (909, 0.0),\n",
              " (910, 0.44120966393682026),\n",
              " (911, 0.43511507076596534),\n",
              " (912, 0.0),\n",
              " (913, 0.0),\n",
              " (914, 0.0),\n",
              " (915, 0.5314689586174589),\n",
              " (916, 0.7986343033237389),\n",
              " (917, 0.4201513216048248),\n",
              " (918, 0.48910596058905365),\n",
              " (919, 0.3016556598097263),\n",
              " (920, 0.0),\n",
              " (921, 0.1714559154117276),\n",
              " (922, 0.4201513216048248),\n",
              " (923, 0.5788306023645081),\n",
              " (924, 0.13665113058974965),\n",
              " (925, 0.17429648287248758),\n",
              " (926, 0.0),\n",
              " (927, 0.3065591246793501),\n",
              " (928, 0.7617629619652846),\n",
              " (929, 0.18171255986797127),\n",
              " (930, 0.518199417059322),\n",
              " (931, 0.7986343033237389),\n",
              " (932, 0.21917041055208134),\n",
              " (933, 0.2736199937911261),\n",
              " (934, 0.11366692118716612),\n",
              " (935, 0.22101774921932255),\n",
              " (936, 0.2779604876852872),\n",
              " (937, 0.7514869502857859),\n",
              " (938, 0.0),\n",
              " (939, 0.7089370216032753),\n",
              " (940, 0.14262873701395096),\n",
              " (941, 0.2736199937911261),\n",
              " (942, 1.0000000000000002),\n",
              " (943, 0.0),\n",
              " (944, 0.2281555701130624),\n",
              " (945, 0.0),\n",
              " (946, 0.0),\n",
              " (947, 0.8622265148955368),\n",
              " (948, 0.40953546252894824),\n",
              " (949, 0.4201513216048248),\n",
              " (950, 0.0),\n",
              " (951, 0.10861920486002513),\n",
              " (952, 0.326757023211668),\n",
              " (953, 0.3702609337097313),\n",
              " (954, 0.0),\n",
              " (955, 0.0),\n",
              " (956, 0.0),\n",
              " (957, 0.16757343279053877),\n",
              " (958, 0.0),\n",
              " (959, 0.2281555701130624),\n",
              " (960, 0.0),\n",
              " (961, 0.0),\n",
              " (962, 0.1581017841542247),\n",
              " (963, 0.3047899439765176),\n",
              " (964, 0.0),\n",
              " (965, 0.0),\n",
              " (966, 0.148919646107351),\n",
              " (967, 0.7047857921491699),\n",
              " (968, 0.472265187178681),\n",
              " (969, 0.14662368428624792),\n",
              " (970, 0.2960935094772184),\n",
              " (971, 0.0),\n",
              " (972, 0.0),\n",
              " (973, 0.1927986161492257),\n",
              " (974, 0.3925596102177653),\n",
              " (975, 0.2281555701130624),\n",
              " (976, 0.6521910775661488),\n",
              " (977, 0.0),\n",
              " (978, 0.0),\n",
              " (979, 0.24554429453440887),\n",
              " (980, 0.44120966393682026),\n",
              " (981, 0.34722636712465005),\n",
              " (982, 0.0),\n",
              " (983, 0.0),\n",
              " (984, 0.2736199937911261),\n",
              " (985, 0.1927986161492257),\n",
              " (986, 0.6484254888663106),\n",
              " (987, 0.4201513216048248),\n",
              " (988, 0.5971864594526515),\n",
              " (989, 1.0000000000000002),\n",
              " (990, 0.0),\n",
              " (991, 0.3702609337097313),\n",
              " (992, 0.23415464727412472),\n",
              " (993, 0.4201513216048248),\n",
              " (994, 0.6714913379551536),\n",
              " (995, 0.0),\n",
              " (996, 0.3365822133770827),\n",
              " (997, 0.23415464727412472),\n",
              " (998, 0.1927986161492257),\n",
              " (999, 0.1927986161492257),\n",
              " ...]"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(score)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "soFJDpeeElys",
        "outputId": "d901b70d-1fc3-4260-93b2-d07173db65c3"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4760"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "***Reccommended movies for you ***"
      ],
      "metadata": {
        "id": "3ghIRxNdE8Zr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "yor_movies=sorted(score, key = lambda  x:x[1], reverse =True)\n",
        "yor_movies\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ni2lGcCXFGBA",
        "outputId": "a0f74117-607e-4c04-d328-25801e17703d"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[(18, 1.0000000000000002),\n",
              " (21, 1.0000000000000002),\n",
              " (112, 1.0000000000000002),\n",
              " (124, 1.0000000000000002),\n",
              " (149, 1.0000000000000002),\n",
              " (166, 1.0000000000000002),\n",
              " (190, 1.0000000000000002),\n",
              " (199, 1.0000000000000002),\n",
              " (276, 1.0000000000000002),\n",
              " (370, 1.0000000000000002),\n",
              " (447, 1.0000000000000002),\n",
              " (450, 1.0000000000000002),\n",
              " (463, 1.0000000000000002),\n",
              " (481, 1.0000000000000002),\n",
              " (502, 1.0000000000000002),\n",
              " (543, 1.0000000000000002),\n",
              " (584, 1.0000000000000002),\n",
              " (604, 1.0000000000000002),\n",
              " (643, 1.0000000000000002),\n",
              " (675, 1.0000000000000002),\n",
              " (799, 1.0000000000000002),\n",
              " (829, 1.0000000000000002),\n",
              " (853, 1.0000000000000002),\n",
              " (860, 1.0000000000000002),\n",
              " (876, 1.0000000000000002),\n",
              " (888, 1.0000000000000002),\n",
              " (942, 1.0000000000000002),\n",
              " (989, 1.0000000000000002),\n",
              " (1107, 1.0000000000000002),\n",
              " (1132, 1.0000000000000002),\n",
              " (1148, 1.0000000000000002),\n",
              " (1275, 1.0000000000000002),\n",
              " (1481, 1.0000000000000002),\n",
              " (1621, 1.0000000000000002),\n",
              " (1739, 1.0000000000000002),\n",
              " (1967, 1.0000000000000002),\n",
              " (1997, 1.0000000000000002),\n",
              " (2037, 1.0000000000000002),\n",
              " (2053, 1.0000000000000002),\n",
              " (2070, 1.0000000000000002),\n",
              " (2096, 1.0000000000000002),\n",
              " (2154, 1.0000000000000002),\n",
              " (2174, 1.0000000000000002),\n",
              " (2196, 1.0000000000000002),\n",
              " (2214, 1.0000000000000002),\n",
              " (2216, 1.0000000000000002),\n",
              " (2334, 1.0000000000000002),\n",
              " (2406, 1.0000000000000002),\n",
              " (2447, 1.0000000000000002),\n",
              " (2602, 1.0000000000000002),\n",
              " (2621, 1.0000000000000002),\n",
              " (2692, 1.0000000000000002),\n",
              " (2784, 1.0000000000000002),\n",
              " (2808, 1.0000000000000002),\n",
              " (2919, 1.0000000000000002),\n",
              " (2961, 1.0000000000000002),\n",
              " (3012, 1.0000000000000002),\n",
              " (3019, 1.0000000000000002),\n",
              " (3043, 1.0000000000000002),\n",
              " (3154, 1.0000000000000002),\n",
              " (3370, 1.0000000000000002),\n",
              " (3483, 1.0000000000000002),\n",
              " (3640, 1.0000000000000002),\n",
              " (3675, 1.0000000000000002),\n",
              " (3699, 1.0000000000000002),\n",
              " (3756, 1.0000000000000002),\n",
              " (3766, 1.0000000000000002),\n",
              " (3777, 1.0000000000000002),\n",
              " (3801, 1.0000000000000002),\n",
              " (3819, 1.0000000000000002),\n",
              " (3854, 1.0000000000000002),\n",
              " (3883, 1.0000000000000002),\n",
              " (3959, 1.0000000000000002),\n",
              " (3961, 1.0000000000000002),\n",
              " (4000, 1.0000000000000002),\n",
              " (4004, 1.0000000000000002),\n",
              " (4123, 1.0000000000000002),\n",
              " (4124, 1.0000000000000002),\n",
              " (4178, 1.0000000000000002),\n",
              " (4231, 1.0000000000000002),\n",
              " (4242, 1.0000000000000002),\n",
              " (4374, 1.0000000000000002),\n",
              " (4387, 1.0000000000000002),\n",
              " (4474, 1.0000000000000002),\n",
              " (4475, 1.0000000000000002),\n",
              " (4531, 1.0000000000000002),\n",
              " (4658, 1.0000000000000002),\n",
              " (4669, 1.0000000000000002),\n",
              " (4679, 1.0000000000000002),\n",
              " (4724, 1.0000000000000002),\n",
              " (4735, 1.0000000000000002),\n",
              " (47, 0.907454057764755),\n",
              " (70, 0.907454057764755),\n",
              " (72, 0.907454057764755),\n",
              " (83, 0.907454057764755),\n",
              " (89, 0.907454057764755),\n",
              " (137, 0.907454057764755),\n",
              " (138, 0.907454057764755),\n",
              " (207, 0.907454057764755),\n",
              " (304, 0.907454057764755),\n",
              " (530, 0.907454057764755),\n",
              " (1018, 0.907454057764755),\n",
              " (1058, 0.907454057764755),\n",
              " (1832, 0.907454057764755),\n",
              " (3659, 0.907454057764755),\n",
              " (3713, 0.907454057764755),\n",
              " (3775, 0.907454057764755),\n",
              " (4096, 0.907454057764755),\n",
              " (4164, 0.907454057764755),\n",
              " (4216, 0.907454057764755),\n",
              " (4235, 0.907454057764755),\n",
              " (4265, 0.907454057764755),\n",
              " (4510, 0.907454057764755),\n",
              " (4512, 0.907454057764755),\n",
              " (1232, 0.8981362414824391),\n",
              " (2925, 0.8981362414824391),\n",
              " (48, 0.8622265148955368),\n",
              " (68, 0.8622265148955368),\n",
              " (210, 0.8622265148955368),\n",
              " (458, 0.8622265148955368),\n",
              " (533, 0.8622265148955368),\n",
              " (534, 0.8622265148955368),\n",
              " (653, 0.8622265148955368),\n",
              " (669, 0.8622265148955368),\n",
              " (673, 0.8622265148955368),\n",
              " (866, 0.8622265148955368),\n",
              " (878, 0.8622265148955368),\n",
              " (947, 0.8622265148955368),\n",
              " (1000, 0.8622265148955368),\n",
              " (1015, 0.8622265148955368),\n",
              " (1035, 0.8622265148955368),\n",
              " (1141, 0.8622265148955368),\n",
              " (1183, 0.8622265148955368),\n",
              " (1335, 0.8622265148955368),\n",
              " (1369, 0.8622265148955368),\n",
              " (1377, 0.8622265148955368),\n",
              " (1417, 0.8622265148955368),\n",
              " (1478, 0.8622265148955368),\n",
              " (1483, 0.8622265148955368),\n",
              " (1678, 0.8622265148955368),\n",
              " (1680, 0.8622265148955368),\n",
              " (1687, 0.8622265148955368),\n",
              " (1740, 0.8622265148955368),\n",
              " (1853, 0.8622265148955368),\n",
              " (2024, 0.8622265148955368),\n",
              " (2040, 0.8622265148955368),\n",
              " (2224, 0.8622265148955368),\n",
              " (2645, 0.8622265148955368),\n",
              " (2668, 0.8622265148955368),\n",
              " (2697, 0.8622265148955368),\n",
              " (2768, 0.8622265148955368),\n",
              " (2795, 0.8622265148955368),\n",
              " (2903, 0.8622265148955368),\n",
              " (2908, 0.8622265148955368),\n",
              " (3210, 0.8622265148955368),\n",
              " (3275, 0.8622265148955368),\n",
              " (3450, 0.8622265148955368),\n",
              " (3642, 0.8622265148955368),\n",
              " (3660, 0.8622265148955368),\n",
              " (3807, 0.8622265148955368),\n",
              " (3862, 0.8622265148955368),\n",
              " (3978, 0.8622265148955368),\n",
              " (4068, 0.8622265148955368),\n",
              " (4095, 0.8622265148955368),\n",
              " (4116, 0.8622265148955368),\n",
              " (4244, 0.8622265148955368),\n",
              " (4673, 0.8622265148955368),\n",
              " (51, 0.8385597416532798),\n",
              " (1237, 0.8385597416532798),\n",
              " (1248, 0.8385597416532798),\n",
              " (1629, 0.8385597416532798),\n",
              " (1942, 0.8385597416532798),\n",
              " (2607, 0.8385597416532798),\n",
              " (3318, 0.8385597416532798),\n",
              " (1989, 0.8272103917127089),\n",
              " (4288, 0.8272103917127089),\n",
              " (43, 0.8245023470136082),\n",
              " (96, 0.8245023470136082),\n",
              " (105, 0.8245023470136082),\n",
              " (106, 0.8245023470136082),\n",
              " (108, 0.8245023470136082),\n",
              " (109, 0.8245023470136082),\n",
              " (111, 0.8245023470136082),\n",
              " (126, 0.8245023470136082),\n",
              " (142, 0.8245023470136082),\n",
              " (172, 0.8245023470136082),\n",
              " (173, 0.8245023470136082),\n",
              " (209, 0.8245023470136082),\n",
              " (216, 0.8245023470136082),\n",
              " (254, 0.8245023470136082),\n",
              " (256, 0.8245023470136082),\n",
              " (274, 0.8245023470136082),\n",
              " (280, 0.8245023470136082),\n",
              " (281, 0.8245023470136082),\n",
              " (285, 0.8245023470136082),\n",
              " (287, 0.8245023470136082),\n",
              " (342, 0.8245023470136082),\n",
              " (396, 0.8245023470136082),\n",
              " (485, 0.8245023470136082),\n",
              " (544, 0.8245023470136082),\n",
              " (828, 0.8245023470136082),\n",
              " (874, 0.8245023470136082),\n",
              " (894, 0.8245023470136082),\n",
              " (1264, 0.8245023470136082),\n",
              " (1339, 0.8245023470136082),\n",
              " (1620, 0.8245023470136082),\n",
              " (1754, 0.8245023470136082),\n",
              " (1776, 0.8245023470136082),\n",
              " (1854, 0.8245023470136082),\n",
              " (1874, 0.8245023470136082),\n",
              " (2023, 0.8245023470136082),\n",
              " (2029, 0.8245023470136082),\n",
              " (2080, 0.8245023470136082),\n",
              " (2126, 0.8245023470136082),\n",
              " (2321, 0.8245023470136082),\n",
              " (2346, 0.8245023470136082),\n",
              " (2649, 0.8245023470136082),\n",
              " (2739, 0.8245023470136082),\n",
              " (2752, 0.8245023470136082),\n",
              " (2849, 0.8245023470136082),\n",
              " (3076, 0.8245023470136082),\n",
              " (3095, 0.8245023470136082),\n",
              " (3119, 0.8245023470136082),\n",
              " (3120, 0.8245023470136082),\n",
              " (3293, 0.8245023470136082),\n",
              " (3956, 0.8245023470136082),\n",
              " (4048, 0.8245023470136082),\n",
              " (4053, 0.8245023470136082),\n",
              " (4187, 0.8245023470136082),\n",
              " (4232, 0.8245023470136082),\n",
              " (4465, 0.8245023470136082),\n",
              " (4469, 0.8245023470136082),\n",
              " (4617, 0.8245023470136082),\n",
              " (4722, 0.8245023470136082),\n",
              " (667, 0.7986343033237389),\n",
              " (678, 0.7986343033237389),\n",
              " (916, 0.7986343033237389),\n",
              " (931, 0.7986343033237389),\n",
              " (1047, 0.7986343033237389),\n",
              " (1300, 0.7986343033237389),\n",
              " (1542, 0.7986343033237389),\n",
              " (1694, 0.7986343033237389),\n",
              " (2336, 0.7986343033237389),\n",
              " (2727, 0.7986343033237389),\n",
              " (2939, 0.7986343033237389),\n",
              " (3652, 0.7986343033237389),\n",
              " (3674, 0.7986343033237389),\n",
              " (1337, 0.7943502562614067),\n",
              " (1119, 0.7882240754812562),\n",
              " (1667, 0.7882240754812562),\n",
              " (2229, 0.7882240754812562),\n",
              " (2295, 0.7882240754812562),\n",
              " (2617, 0.7882240754812562),\n",
              " (3086, 0.7882240754812562),\n",
              " (3437, 0.7882240754812562),\n",
              " (879, 0.775729347400482),\n",
              " (1506, 0.775729347400482),\n",
              " (88, 0.7617629619652846),\n",
              " (170, 0.7617629619652846),\n",
              " (244, 0.7617629619652846),\n",
              " (435, 0.7617629619652846),\n",
              " (500, 0.7617629619652846),\n",
              " (560, 0.7617629619652846),\n",
              " (621, 0.7617629619652846),\n",
              " (668, 0.7617629619652846),\n",
              " (682, 0.7617629619652846),\n",
              " (753, 0.7617629619652846),\n",
              " (825, 0.7617629619652846),\n",
              " (827, 0.7617629619652846),\n",
              " (928, 0.7617629619652846),\n",
              " (1054, 0.7617629619652846),\n",
              " (1092, 0.7617629619652846),\n",
              " (1162, 0.7617629619652846),\n",
              " (1226, 0.7617629619652846),\n",
              " (1259, 0.7617629619652846),\n",
              " (1276, 0.7617629619652846),\n",
              " (1406, 0.7617629619652846),\n",
              " (1419, 0.7617629619652846),\n",
              " (1455, 0.7617629619652846),\n",
              " (1591, 0.7617629619652846),\n",
              " (1681, 0.7617629619652846),\n",
              " (1815, 0.7617629619652846),\n",
              " (1937, 0.7617629619652846),\n",
              " (2206, 0.7617629619652846),\n",
              " (2275, 0.7617629619652846),\n",
              " (2276, 0.7617629619652846),\n",
              " (2383, 0.7617629619652846),\n",
              " (2429, 0.7617629619652846),\n",
              " (2742, 0.7617629619652846),\n",
              " (2751, 0.7617629619652846),\n",
              " (2788, 0.7617629619652846),\n",
              " (2791, 0.7617629619652846),\n",
              " (2918, 0.7617629619652846),\n",
              " (2963, 0.7617629619652846),\n",
              " (3085, 0.7617629619652846),\n",
              " (3312, 0.7617629619652846),\n",
              " (3384, 0.7617629619652846),\n",
              " (3465, 0.7617629619652846),\n",
              " (3466, 0.7617629619652846),\n",
              " (3507, 0.7617629619652846),\n",
              " (3708, 0.7617629619652846),\n",
              " (3741, 0.7617629619652846),\n",
              " (3794, 0.7617629619652846),\n",
              " (3860, 0.7617629619652846),\n",
              " (3946, 0.7617629619652846),\n",
              " (3993, 0.7617629619652846),\n",
              " (4088, 0.7617629619652846),\n",
              " (4148, 0.7617629619652846),\n",
              " (4436, 0.7617629619652846),\n",
              " (4450, 0.7617629619652846),\n",
              " (4481, 0.7617629619652846),\n",
              " (4543, 0.7617629619652846),\n",
              " (4553, 0.7617629619652846),\n",
              " (4684, 0.7617629619652846),\n",
              " (4709, 0.7617629619652846),\n",
              " (4747, 0.7617629619652846),\n",
              " (2412, 0.752238203565335),\n",
              " (87, 0.7514869502857859),\n",
              " (147, 0.7514869502857859),\n",
              " (236, 0.7514869502857859),\n",
              " (429, 0.7514869502857859),\n",
              " (622, 0.7514869502857859),\n",
              " (652, 0.7514869502857859),\n",
              " (676, 0.7514869502857859),\n",
              " (701, 0.7514869502857859),\n",
              " (870, 0.7514869502857859),\n",
              " (896, 0.7514869502857859),\n",
              " (937, 0.7514869502857859),\n",
              " (1064, 0.7514869502857859),\n",
              " (1303, 0.7514869502857859),\n",
              " (1325, 0.7514869502857859),\n",
              " (1360, 0.7514869502857859),\n",
              " (1509, 0.7514869502857859),\n",
              " (1671, 0.7514869502857859),\n",
              " (1774, 0.7514869502857859),\n",
              " (1983, 0.7514869502857859),\n",
              " (2112, 0.7514869502857859),\n",
              " (2254, 0.7514869502857859),\n",
              " (2638, 0.7514869502857859),\n",
              " (2695, 0.7514869502857859),\n",
              " (2932, 0.7514869502857859),\n",
              " (2996, 0.7514869502857859),\n",
              " (3670, 0.7514869502857859),\n",
              " (3694, 0.7514869502857859),\n",
              " (4189, 0.7514869502857859),\n",
              " (4403, 0.7514869502857859),\n",
              " (4554, 0.7514869502857859),\n",
              " (4637, 0.7514869502857859),\n",
              " (1385, 0.7440128746229138),\n",
              " (2522, 0.7440128746229138),\n",
              " (1236, 0.7378425053514843),\n",
              " (3377, 0.7264735740642287),\n",
              " (1985, 0.7152636706032325),\n",
              " (4707, 0.7094201767532887),\n",
              " (479, 0.7089370216032753),\n",
              " (757, 0.7089370216032753),\n",
              " (939, 0.7089370216032753),\n",
              " (1078, 0.7089370216032753),\n",
              " (1234, 0.7089370216032753),\n",
              " (1582, 0.7089370216032753),\n",
              " (1861, 0.7089370216032753),\n",
              " (1923, 0.7089370216032753),\n",
              " (2076, 0.7089370216032753),\n",
              " (2264, 0.7089370216032753),\n",
              " (2464, 0.7089370216032753),\n",
              " (2546, 0.7089370216032753),\n",
              " (3155, 0.7089370216032753),\n",
              " (3382, 0.7089370216032753),\n",
              " (3418, 0.7089370216032753),\n",
              " (3941, 0.7089370216032753),\n",
              " (3984, 0.7089370216032753),\n",
              " (3992, 0.7089370216032753),\n",
              " (4203, 0.7089370216032753),\n",
              " (4246, 0.7089370216032753),\n",
              " (4610, 0.7089370216032753),\n",
              " (16, 0.7047857921491699),\n",
              " (34, 0.7047857921491699),\n",
              " (107, 0.7047857921491699),\n",
              " (243, 0.7047857921491699),\n",
              " (562, 0.7047857921491699),\n",
              " (563, 0.7047857921491699),\n",
              " (571, 0.7047857921491699),\n",
              " (581, 0.7047857921491699),\n",
              " (628, 0.7047857921491699),\n",
              " (637, 0.7047857921491699),\n",
              " (642, 0.7047857921491699),\n",
              " (689, 0.7047857921491699),\n",
              " (694, 0.7047857921491699),\n",
              " (732, 0.7047857921491699),\n",
              " (743, 0.7047857921491699),\n",
              " (761, 0.7047857921491699),\n",
              " (831, 0.7047857921491699),\n",
              " (861, 0.7047857921491699),\n",
              " (863, 0.7047857921491699),\n",
              " (900, 0.7047857921491699),\n",
              " (967, 0.7047857921491699),\n",
              " (1030, 0.7047857921491699),\n",
              " (1188, 0.7047857921491699),\n",
              " (1191, 0.7047857921491699),\n",
              " (1383, 0.7047857921491699),\n",
              " (1448, 0.7047857921491699),\n",
              " (1462, 0.7047857921491699),\n",
              " (1865, 0.7047857921491699),\n",
              " (1918, 0.7047857921491699),\n",
              " (1960, 0.7047857921491699),\n",
              " (2069, 0.7047857921491699),\n",
              " (2121, 0.7047857921491699),\n",
              " (2558, 0.7047857921491699),\n",
              " (2580, 0.7047857921491699),\n",
              " (2606, 0.7047857921491699),\n",
              " (2655, 0.7047857921491699),\n",
              " (2716, 0.7047857921491699),\n",
              " (2988, 0.7047857921491699),\n",
              " (3032, 0.7047857921491699),\n",
              " (3035, 0.7047857921491699),\n",
              " (3125, 0.7047857921491699),\n",
              " (3196, 0.7047857921491699),\n",
              " (3228, 0.7047857921491699),\n",
              " (3284, 0.7047857921491699),\n",
              " (3344, 0.7047857921491699),\n",
              " (3435, 0.7047857921491699),\n",
              " (3436, 0.7047857921491699),\n",
              " (3498, 0.7047857921491699),\n",
              " (3499, 0.7047857921491699),\n",
              " (3501, 0.7047857921491699),\n",
              " (3521, 0.7047857921491699),\n",
              " (3618, 0.7047857921491699),\n",
              " (3653, 0.7047857921491699),\n",
              " (3661, 0.7047857921491699),\n",
              " (3696, 0.7047857921491699),\n",
              " (3727, 0.7047857921491699),\n",
              " (3780, 0.7047857921491699),\n",
              " (3841, 0.7047857921491699),\n",
              " (3876, 0.7047857921491699),\n",
              " (3910, 0.7047857921491699),\n",
              " (3974, 0.7047857921491699),\n",
              " (4013, 0.7047857921491699),\n",
              " (4089, 0.7047857921491699),\n",
              " (4092, 0.7047857921491699),\n",
              " (4163, 0.7047857921491699),\n",
              " (4176, 0.7047857921491699),\n",
              " (4362, 0.7047857921491699),\n",
              " (4402, 0.7047857921491699),\n",
              " (4431, 0.7047857921491699),\n",
              " (4470, 0.7047857921491699),\n",
              " (4576, 0.7047857921491699),\n",
              " (4579, 0.7047857921491699),\n",
              " (4612, 0.7047857921491699),\n",
              " (4710, 0.7047857921491699),\n",
              " (4715, 0.7047857921491699),\n",
              " (4731, 0.7047857921491699),\n",
              " (4757, 0.7047857921491699),\n",
              " (52, 0.7012988244541298),\n",
              " (3317, 0.7012988244541298),\n",
              " (2771, 0.6950250817196322),\n",
              " (532, 0.6939130705053973),\n",
              " (904, 0.6939130705053973),\n",
              " (905, 0.6939130705053973),\n",
              " (1024, 0.6939130705053973),\n",
              " (1292, 0.6939130705053973),\n",
              " (1432, 0.6939130705053973),\n",
              " (1781, 0.6939130705053973),\n",
              " (3070, 0.6939130705053973),\n",
              " (3684, 0.6939130705053973),\n",
              " (4121, 0.6939130705053973),\n",
              " (4325, 0.6939130705053973),\n",
              " (99, 0.6878993572639702),\n",
              " (291, 0.6878993572639702),\n",
              " (1104, 0.6878993572639702),\n",
              " (1343, 0.6878993572639702),\n",
              " (2057, 0.6878993572639702),\n",
              " (2110, 0.6878993572639702),\n",
              " (2871, 0.6878993572639702),\n",
              " (3334, 0.6878993572639702),\n",
              " (3535, 0.6878993572639702),\n",
              " (3768, 0.6878993572639702),\n",
              " (4227, 0.6878993572639702),\n",
              " (4623, 0.6878993572639702),\n",
              " (542, 0.687474775506141),\n",
              " (1017, 0.687474775506141),\n",
              " (1252, 0.687474775506141),\n",
              " (1665, 0.687474775506141),\n",
              " (1796, 0.687474775506141),\n",
              " (2210, 0.687474775506141),\n",
              " (2910, 0.687474775506141),\n",
              " (4379, 0.687474775506141),\n",
              " (4503, 0.687474775506141),\n",
              " (1061, 0.6756872467525066),\n",
              " (2978, 0.6756872467525066),\n",
              " (1184, 0.6752972701297861),\n",
              " (3403, 0.6752972701297861),\n",
              " (1716, 0.6734918042287732),\n",
              " (123, 0.6714913379551536),\n",
              " (683, 0.6714913379551536),\n",
              " (994, 0.6714913379551536),\n",
              " (1005, 0.6714913379551536),\n",
              " (1290, 0.6714913379551536),\n",
              " (1338, 0.6714913379551536),\n",
              " (1527, 0.6714913379551536),\n",
              " (1736, 0.6714913379551536),\n",
              " (2625, 0.6714913379551536),\n",
              " (3306, 0.6714913379551536),\n",
              " (4033, 0.6714913379551536),\n",
              " (4435, 0.6714913379551536),\n",
              " (4477, 0.6714913379551536),\n",
              " (4619, 0.6714913379551536),\n",
              " (4739, 0.6714913379551536),\n",
              " (144, 0.6529153803670847),\n",
              " (145, 0.6521910775661488),\n",
              " (360, 0.6521910775661488),\n",
              " (695, 0.6521910775661488),\n",
              " (790, 0.6521910775661488),\n",
              " (801, 0.6521910775661488),\n",
              " (976, 0.6521910775661488),\n",
              " (1068, 0.6521910775661488),\n",
              " (1958, 0.6521910775661488),\n",
              " (2119, 0.6521910775661488),\n",
              " (2235, 0.6521910775661488),\n",
              " (2524, 0.6521910775661488),\n",
              " (3110, 0.6521910775661488),\n",
              " (3504, 0.6521910775661488),\n",
              " (3711, 0.6521910775661488),\n",
              " (4380, 0.6521910775661488),\n",
              " (986, 0.6484254888663106),\n",
              " (1471, 0.6484254888663106),\n",
              " (1595, 0.6481649001832882),\n",
              " (408, 0.6476057520027616),\n",
              " (547, 0.6476057520027616),\n",
              " (1053, 0.6476057520027616),\n",
              " (1858, 0.6476057520027616),\n",
              " (2489, 0.6476057520027616),\n",
              " (3407, 0.6476057520027616),\n",
              " (4060, 0.6476057520027616),\n",
              " (201, 0.6449981645934193),\n",
              " (501, 0.6449981645934193),\n",
              " (692, 0.6449981645934193),\n",
              " (875, 0.6449981645934193),\n",
              " (1063, 0.6449981645934193),\n",
              " (1185, 0.6449981645934193),\n",
              " (1412, 0.6449981645934193),\n",
              " (1436, 0.6449981645934193),\n",
              " (1789, 0.6449981645934193),\n",
              " (2066, 0.6449981645934193),\n",
              " (3849, 0.6449981645934193),\n",
              " (1224, 0.6399509443424654),\n",
              " (1992, 0.6367068801855543),\n",
              " (2284, 0.6367068801855543),\n",
              " (3637, 0.6265693879790029),\n",
              " (148, 0.6175457622364403),\n",
              " (334, 0.6175457622364403),\n",
              " (2486, 0.6080778446609398),\n",
              " (1513, 0.6045129139943931),\n",
              " (1727, 0.6045129139943931),\n",
              " (3097, 0.6045129139943931),\n",
              " (3267, 0.6045129139943931),\n",
              " (4293, 0.6045129139943931),\n",
              " (3416, 0.6034630952836406),\n",
              " (417, 0.6022353998973401),\n",
              " (418, 0.6022353998973401),\n",
              " (842, 0.6022353998973401),\n",
              " (1115, 0.6022353998973401),\n",
              " (1173, 0.6022353998973401),\n",
              " (2093, 0.6022353998973401),\n",
              " (3232, 0.6022353998973401),\n",
              " (3582, 0.6022353998973401),\n",
              " (558, 0.5986873724349902),\n",
              " (120, 0.5974918773976983),\n",
              " (988, 0.5971864594526515),\n",
              " (654, 0.5913210892731544),\n",
              " (1314, 0.5913210892731544),\n",
              " (1949, 0.5913210892731544),\n",
              " (2780, 0.5913210892731544),\n",
              " (3947, 0.5913210892731544),\n",
              " (1317, 0.5869094529580564),\n",
              " (1821, 0.5869094529580564),\n",
              " (4442, 0.5869094529580564),\n",
              " (0, 0.583875513314773),\n",
              " (42, 0.583875513314773),\n",
              " (50, 0.583875513314773),\n",
              " (503, 0.583875513314773),\n",
              " (664, 0.583875513314773),\n",
              " (862, 0.583875513314773),\n",
              " (1213, 0.583875513314773),\n",
              " (1260, 0.583875513314773),\n",
              " (1282, 0.583875513314773),\n",
              " (1330, 0.583875513314773),\n",
              " (1344, 0.583875513314773),\n",
              " (1371, 0.583875513314773),\n",
              " (1461, 0.583875513314773),\n",
              " (1507, 0.583875513314773),\n",
              " (1981, 0.583875513314773),\n",
              " (1986, 0.583875513314773),\n",
              " (2158, 0.583875513314773),\n",
              " (2228, 0.583875513314773),\n",
              " (2304, 0.583875513314773),\n",
              " (2487, 0.583875513314773),\n",
              " (2635, 0.583875513314773),\n",
              " (2833, 0.583875513314773),\n",
              " (2948, 0.583875513314773),\n",
              " (2994, 0.583875513314773),\n",
              " (3127, 0.583875513314773),\n",
              " (3149, 0.583875513314773),\n",
              " (3508, 0.583875513314773),\n",
              " (3570, 0.583875513314773),\n",
              " (3905, 0.583875513314773),\n",
              " (3949, 0.583875513314773),\n",
              " (4007, 0.583875513314773),\n",
              " (4105, 0.583875513314773),\n",
              " (206, 0.5800980625456084),\n",
              " (483, 0.5800980625456084),\n",
              " (923, 0.5788306023645081),\n",
              " (1488, 0.5788306023645081),\n",
              " (1902, 0.5788306023645081),\n",
              " (2348, 0.5788306023645081),\n",
              " (3349, 0.5788306023645081),\n",
              " (3571, 0.5788306023645081),\n",
              " (4522, 0.5788306023645081),\n",
              " (2512, 0.5784995992789239),\n",
              " (3553, 0.5718872178669434),\n",
              " (685, 0.5658585333535687),\n",
              " (1181, 0.5658585333535687),\n",
              " (1435, 0.5658585333535687),\n",
              " (1910, 0.5658585333535687),\n",
              " (2084, 0.5658585333535687),\n",
              " (2252, 0.5658585333535687),\n",
              " (2700, 0.5658585333535687),\n",
              " (3049, 0.5658585333535687),\n",
              " (3117, 0.5658585333535687),\n",
              " (3774, 0.5658585333535687),\n",
              " (3806, 0.5658585333535687),\n",
              " (4047, 0.5658585333535687),\n",
              " (4162, 0.5658585333535687),\n",
              " (4208, 0.5658585333535687),\n",
              " (4281, 0.5658585333535687),\n",
              " (4307, 0.5658585333535687),\n",
              " (4375, 0.5658585333535687),\n",
              " (4515, 0.5658585333535687),\n",
              " (4524, 0.5658585333535687),\n",
              " (4587, 0.5658585333535687),\n",
              " (4601, 0.5658585333535687),\n",
              " (4678, 0.5658585333535687),\n",
              " (4689, 0.5658585333535687),\n",
              " (2212, 0.5651279094889916),\n",
              " (251, 0.5644388622118346),\n",
              " (270, 0.5644388622118346),\n",
              " (806, 0.5644388622118346),\n",
              " (816, 0.5644388622118346),\n",
              " (864, 0.5644388622118346),\n",
              " (1334, 0.5644388622118346),\n",
              " (2097, 0.5644388622118346),\n",
              " (2250, 0.5644388622118346),\n",
              " (3171, 0.5644388622118346),\n",
              " (4268, 0.5644388622118346),\n",
              " (4551, 0.5644388622118346),\n",
              " (1348, 0.5578506272984584),\n",
              " (1440, 0.5576083433167471),\n",
              " (1970, 0.5547117231974954),\n",
              " (3118, 0.5547117231974954),\n",
              " (760, 0.5482483129822032),\n",
              " (2280, 0.5468234065062065),\n",
              " (10, 0.5463997708973266),\n",
              " (143, 0.5463997708973266),\n",
              " (1076, 0.5463997708973266),\n",
              " (1393, 0.5463997708973266),\n",
              " (1504, 0.5463997708973266),\n",
              " (1540, 0.5463997708973266),\n",
              " (2184, 0.5463997708973266),\n",
              " (2815, 0.5463997708973266),\n",
              " (4045, 0.5463997708973266),\n",
              " (4122, 0.5463997708973266),\n",
              " (4390, 0.5463997708973266),\n",
              " (4656, 0.5463997708973266),\n",
              " (4727, 0.5463997708973266),\n",
              " (3374, 0.5421110891372223),\n",
              " (44, 0.5413794213254587),\n",
              " (442, 0.5413794213254587),\n",
              " (470, 0.5413794213254587),\n",
              " (670, 0.5413794213254587),\n",
              " (688, 0.5413794213254587),\n",
              " (728, 0.5413794213254587),\n",
              " (845, 0.5413794213254587),\n",
              " (868, 0.5413794213254587),\n",
              " (1174, 0.5413794213254587),\n",
              " (1257, 0.5413794213254587),\n",
              " (1442, 0.5413794213254587),\n",
              " (1454, 0.5413794213254587),\n",
              " (1484, 0.5413794213254587),\n",
              " (1876, 0.5413794213254587),\n",
              " (2088, 0.5413794213254587),\n",
              " (2188, 0.5413794213254587),\n",
              " (2459, 0.5413794213254587),\n",
              " (2778, 0.5413794213254587),\n",
              " (2840, 0.5413794213254587),\n",
              " (2854, 0.5413794213254587),\n",
              " (3227, 0.5413794213254587),\n",
              " (3556, 0.5413794213254587),\n",
              " (3680, 0.5413794213254587),\n",
              " (3771, 0.5413794213254587),\n",
              " (4005, 0.5413794213254587),\n",
              " (4038, 0.5413794213254587),\n",
              " (4098, 0.5413794213254587),\n",
              " (4249, 0.5413794213254587),\n",
              " (4430, 0.5413794213254587),\n",
              " (4432, 0.5413794213254587),\n",
              " (4443, 0.5413794213254587),\n",
              " (4444, 0.5413794213254587),\n",
              " (4661, 0.5413794213254587),\n",
              " (333, 0.5345412954993455),\n",
              " (1137, 0.5345412954993455),\n",
              " (1230, 0.5345412954993455),\n",
              " (3045, 0.5345412954993455),\n",
              " (915, 0.5314689586174589),\n",
              " (3099, 0.5314689586174589),\n",
              " (792, 0.519393454044119),\n",
              " (1922, 0.519393454044119),\n",
              " (3612, 0.519393454044119),\n",
              " (3924, 0.519393454044119),\n",
              " (255, 0.518199417059322),\n",
              " (356, 0.518199417059322),\n",
              " (406, 0.518199417059322),\n",
              " (930, 0.518199417059322),\n",
              " (1421, 0.518199417059322),\n",
              " (1472, 0.518199417059322),\n",
              " (1845, 0.518199417059322),\n",
              " (1866, 0.518199417059322),\n",
              " (4309, 0.518199417059322),\n",
              " (1572, 0.5174431721179534),\n",
              " (5, 0.5138922871093842),\n",
              " (566, 0.5138922871093842),\n",
              " (2279, 0.5138922871093842),\n",
              " (2934, 0.5138922871093842),\n",
              " (1074, 0.50943333990462),\n",
              " (3342, 0.5074630885099912),\n",
              " (3638, 0.5074630885099912),\n",
              " (4533, 0.5074630885099912),\n",
              " (2886, 0.49676886776484397),\n",
              " (4141, 0.49676886776484397),\n",
              " (918, 0.48910596058905365),\n",
              " (851, 0.48580949887259983),\n",
              " (629, 0.48322210319175696),\n",
              " (38, 0.4824765370565067),\n",
              " (40, 0.4824765370565067),\n",
              " (139, 0.4824765370565067),\n",
              " (494, 0.4824765370565067),\n",
              " (869, 0.4824765370565067),\n",
              " (1214, 0.4824765370565067),\n",
              " (1544, 0.4824765370565067),\n",
              " (1721, 0.4824765370565067),\n",
              " (1735, 0.4824765370565067),\n",
              " (1847, 0.4824765370565067),\n",
              " (1973, 0.4824765370565067),\n",
              " (2077, 0.4824765370565067),\n",
              " (2363, 0.4824765370565067),\n",
              " (2424, 0.4824765370565067),\n",
              " (2581, 0.4824765370565067),\n",
              " (2600, 0.4824765370565067),\n",
              " (2825, 0.4824765370565067),\n",
              " (2913, 0.4824765370565067),\n",
              " (2962, 0.4824765370565067),\n",
              " (2971, 0.4824765370565067),\n",
              " (3192, 0.4824765370565067),\n",
              " (3259, 0.4824765370565067),\n",
              " (3531, 0.4824765370565067),\n",
              " (3658, 0.4824765370565067),\n",
              " (4093, 0.4824765370565067),\n",
              " (4094, 0.4824765370565067),\n",
              " (4233, 0.4824765370565067),\n",
              " (4440, 0.4824765370565067),\n",
              " (4486, 0.4824765370565067),\n",
              " (350, 0.4776341062173869),\n",
              " (3514, 0.4776341062173869),\n",
              " (1116, 0.47708530755340484),\n",
              " (3280, 0.47708530755340484),\n",
              " (3731, 0.47708530755340484),\n",
              " (2178, 0.4768054636227623),\n",
              " (222, 0.472265187178681),\n",
              " (968, 0.472265187178681),\n",
              " (1041, 0.472265187178681),\n",
              " (1192, 0.472265187178681),\n",
              " (1202, 0.472265187178681),\n",
              " (1351, 0.472265187178681),\n",
              " (1555, 0.472265187178681),\n",
              " (1643, 0.472265187178681),\n",
              " (2031, 0.472265187178681),\n",
              " (2255, 0.472265187178681),\n",
              " (3195, 0.472265187178681),\n",
              " (3433, 0.472265187178681),\n",
              " (3471, 0.472265187178681),\n",
              " (3474, 0.472265187178681),\n",
              " (3487, 0.472265187178681),\n",
              " (3666, 0.472265187178681),\n",
              " (3901, 0.472265187178681),\n",
              " (4133, 0.472265187178681),\n",
              " (4412, 0.472265187178681),\n",
              " (4517, 0.472265187178681),\n",
              " (4674, 0.472265187178681),\n",
              " (2055, 0.46899672651354574),\n",
              " (4192, 0.46773532619351443),\n",
              " (3888, 0.4664373374369646),\n",
              " (86, 0.46626110518344044),\n",
              " (474, 0.46626110518344044),\n",
              " (1585, 0.46626110518344044),\n",
              " (1806, 0.46626110518344044),\n",
              " (1816, 0.46626110518344044),\n",
              " (2026, 0.46626110518344044),\n",
              " (2519, 0.46626110518344044),\n",
              " (2897, 0.46626110518344044),\n",
              " (1489, 0.46148902130833924),\n",
              " (684, 0.4612636028487691),\n",
              " (1438, 0.4612636028487691),\n",
              " (2318, 0.4610961032113065),\n",
              " (2162, 0.45886211264945076),\n",
              " (1194, 0.4585925889834702),\n",
              " (1231, 0.4585925889834702),\n",
              " (1738, 0.4585925889834702),\n",
              " (1387, 0.4524935642292442),\n",
              " (2016, 0.4524935642292442),\n",
              " (1128, 0.445879857755355),\n",
              " (515, 0.4449015825206608),\n",
              " (1065, 0.4418262409172802),\n",
              " (200, 0.44120966393682026),\n",
              " (329, 0.44120966393682026),\n",
              " (433, 0.44120966393682026),\n",
              " (436, 0.44120966393682026),\n",
              " (443, 0.44120966393682026),\n",
              " (482, 0.44120966393682026),\n",
              " (636, 0.44120966393682026),\n",
              " (742, 0.44120966393682026),\n",
              " (808, 0.44120966393682026),\n",
              " (832, 0.44120966393682026),\n",
              " (910, 0.44120966393682026),\n",
              " (980, 0.44120966393682026),\n",
              " (1071, 0.44120966393682026),\n",
              " (1255, 0.44120966393682026),\n",
              " (1356, 0.44120966393682026),\n",
              " (1375, 0.44120966393682026),\n",
              " (1429, 0.44120966393682026),\n",
              " (1519, 0.44120966393682026),\n",
              " (1779, 0.44120966393682026),\n",
              " (1811, 0.44120966393682026),\n",
              " (1892, 0.44120966393682026),\n",
              " (1924, 0.44120966393682026),\n",
              " (1964, 0.44120966393682026),\n",
              " (2008, 0.44120966393682026),\n",
              " (2089, 0.44120966393682026),\n",
              " (2191, 0.44120966393682026),\n",
              " (2374, 0.44120966393682026),\n",
              " (2477, 0.44120966393682026),\n",
              " (2598, 0.44120966393682026),\n",
              " (2632, 0.44120966393682026),\n",
              " (2879, 0.44120966393682026),\n",
              " (2917, 0.44120966393682026),\n",
              " (2981, 0.44120966393682026),\n",
              " (3153, 0.44120966393682026),\n",
              " (3325, 0.44120966393682026),\n",
              " (3460, 0.44120966393682026),\n",
              " (3704, 0.44120966393682026),\n",
              " (3705, 0.44120966393682026),\n",
              " (4284, 0.44120966393682026),\n",
              " (4299, 0.44120966393682026),\n",
              " (4494, 0.44120966393682026),\n",
              " (539, 0.4397517875495551),\n",
              " (1945, 0.4397517875495551),\n",
              " (3597, 0.4397517875495551),\n",
              " (4289, 0.4397517875495551),\n",
              " (208, 0.43511507076596534),\n",
              " (519, 0.43511507076596534),\n",
              " (716, 0.43511507076596534),\n",
              " (911, 0.43511507076596534),\n",
              " (1001, 0.43511507076596534),\n",
              " (1179, 0.43511507076596534),\n",
              " (1225, 0.43511507076596534),\n",
              " (1675, 0.43511507076596534),\n",
              " (1931, 0.43511507076596534),\n",
              " (1934, 0.43511507076596534),\n",
              " (2045, 0.43511507076596534),\n",
              " (2427, 0.43511507076596534),\n",
              " (2428, 0.43511507076596534),\n",
              " (2555, 0.43511507076596534),\n",
              " (2647, 0.43511507076596534),\n",
              " (3065, 0.43511507076596534),\n",
              " (3635, 0.43511507076596534),\n",
              " (311, 0.4327498043306492),\n",
              " (3142, 0.4319259085371167),\n",
              " (1971, 0.42655124794235644),\n",
              " (608, 0.4228041700662818),\n",
              " (4, 0.4201513216048248),\n",
              " (20, 0.4201513216048248),\n",
              " (24, 0.4201513216048248),\n",
              " (26, 0.4201513216048248),\n",
              " (66, 0.4201513216048248),\n",
              " (98, 0.4201513216048248),\n",
              " (140, 0.4201513216048248),\n",
              " (154, 0.4201513216048248),\n",
              " (164, 0.4201513216048248),\n",
              " (167, 0.4201513216048248),\n",
              " (176, 0.4201513216048248),\n",
              " (196, 0.4201513216048248),\n",
              " (203, 0.4201513216048248),\n",
              " (213, 0.4201513216048248),\n",
              " (226, 0.4201513216048248),\n",
              " (229, 0.4201513216048248),\n",
              " (235, 0.4201513216048248),\n",
              " (249, 0.4201513216048248),\n",
              " (262, 0.4201513216048248),\n",
              " (268, 0.4201513216048248),\n",
              " (293, 0.4201513216048248),\n",
              " (308, 0.4201513216048248),\n",
              " (317, 0.4201513216048248),\n",
              " (324, 0.4201513216048248),\n",
              " (395, 0.4201513216048248),\n",
              " (399, 0.4201513216048248),\n",
              " (402, 0.4201513216048248),\n",
              " (412, 0.4201513216048248),\n",
              " (432, 0.4201513216048248),\n",
              " (444, 0.4201513216048248),\n",
              " (445, 0.4201513216048248),\n",
              " (446, 0.4201513216048248),\n",
              " (449, 0.4201513216048248),\n",
              " (466, 0.4201513216048248),\n",
              " (476, 0.4201513216048248),\n",
              " (478, 0.4201513216048248),\n",
              " (499, 0.4201513216048248),\n",
              " (518, 0.4201513216048248),\n",
              " (526, 0.4201513216048248),\n",
              " (527, 0.4201513216048248),\n",
              " (541, 0.4201513216048248),\n",
              " (597, 0.4201513216048248),\n",
              " (611, 0.4201513216048248),\n",
              " (620, 0.4201513216048248),\n",
              " (624, 0.4201513216048248),\n",
              " (645, 0.4201513216048248),\n",
              " (647, 0.4201513216048248),\n",
              " (680, 0.4201513216048248),\n",
              " (706, 0.4201513216048248),\n",
              " (717, 0.4201513216048248),\n",
              " (731, 0.4201513216048248),\n",
              " (766, 0.4201513216048248),\n",
              " (767, 0.4201513216048248),\n",
              " (777, 0.4201513216048248),\n",
              " (782, 0.4201513216048248),\n",
              " (791, 0.4201513216048248),\n",
              " (805, 0.4201513216048248),\n",
              " (817, 0.4201513216048248),\n",
              " (823, 0.4201513216048248),\n",
              " (889, 0.4201513216048248),\n",
              " (895, 0.4201513216048248),\n",
              " (899, 0.4201513216048248),\n",
              " (901, 0.4201513216048248),\n",
              " (917, 0.4201513216048248),\n",
              " (922, 0.4201513216048248),\n",
              " (949, 0.4201513216048248),\n",
              " (987, 0.4201513216048248),\n",
              " (993, 0.4201513216048248),\n",
              " (1004, 0.4201513216048248),\n",
              " (1019, 0.4201513216048248),\n",
              " (1032, 0.4201513216048248),\n",
              " (1033, 0.4201513216048248),\n",
              " (1036, 0.4201513216048248),\n",
              " (1037, 0.4201513216048248),\n",
              " (1042, 0.4201513216048248),\n",
              " (1048, 0.4201513216048248),\n",
              " (1059, 0.4201513216048248),\n",
              " (1072, 0.4201513216048248),\n",
              " (1098, 0.4201513216048248),\n",
              " (1110, 0.4201513216048248),\n",
              " (1121, 0.4201513216048248),\n",
              " (1144, 0.4201513216048248),\n",
              " (1168, 0.4201513216048248),\n",
              " (1294, 0.4201513216048248),\n",
              " (1319, 0.4201513216048248),\n",
              " (1355, 0.4201513216048248),\n",
              " (1402, 0.4201513216048248),\n",
              " (1404, 0.4201513216048248),\n",
              " (1416, 0.4201513216048248),\n",
              " (1434, 0.4201513216048248),\n",
              " (1439, 0.4201513216048248),\n",
              " (1450, 0.4201513216048248),\n",
              " (1456, 0.4201513216048248),\n",
              " (1464, 0.4201513216048248),\n",
              " (1497, 0.4201513216048248),\n",
              " (1499, 0.4201513216048248),\n",
              " (1500, 0.4201513216048248),\n",
              " (1538, 0.4201513216048248),\n",
              " (1550, 0.4201513216048248),\n",
              " (1553, 0.4201513216048248),\n",
              " (1574, 0.4201513216048248),\n",
              " (1593, 0.4201513216048248),\n",
              " (1617, 0.4201513216048248),\n",
              " (1625, 0.4201513216048248),\n",
              " (1641, 0.4201513216048248),\n",
              " (1670, 0.4201513216048248),\n",
              " (1672, 0.4201513216048248),\n",
              " (1691, 0.4201513216048248),\n",
              " (1712, 0.4201513216048248),\n",
              " (1742, 0.4201513216048248),\n",
              " (1793, 0.4201513216048248),\n",
              " (1801, 0.4201513216048248),\n",
              " (1805, 0.4201513216048248),\n",
              " (1807, 0.4201513216048248),\n",
              " ...]"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Top 30 Movie Suggested for You**"
      ],
      "metadata": {
        "id": "pf98R2S_Hwyp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "2r_miZ0SHvQb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print('Top 30 Movie Suggested for You: \\n')\n",
        "\n",
        "i = 1\n",
        "\n",
        "for movie in yor_movies:\n",
        "  index=movie[0]\n",
        "  title_from_index= df[df.index == index]['Movie_Title'].values[0]\n",
        "  if (i < 31):\n",
        "    print( i, '.',title_from_index)\n",
        "    i+=1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Rw2nVNh3Hvty",
        "outputId": "63de8187-b2bd-4ab8-a18b-6def8c077c0d"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Top 30 Movie Suggested for You: \n",
            "\n",
            "1 . A History of Violence\n",
            "2 . Absolute Power\n",
            "3 . The Godfather: Part III\n",
            "4 . The Silence of the Lambs\n",
            "5 . Brother\n",
            "6 . Inside Man\n",
            "7 . Maria Full of Grace\n",
            "8 . 21 Grams\n",
            "9 . The Usual Suspects\n",
            "10 . Sleepers\n",
            "11 . The Talented Mr. Ripley\n",
            "12 . Hannibal Rising\n",
            "13 . American Psycho\n",
            "14 . The Departed\n",
            "15 . Collateral\n",
            "16 . A Time to Kill\n",
            "17 . Lord of War\n",
            "18 . Traffic\n",
            "19 . We Own the Night\n",
            "20 . Out of Time\n",
            "21 . Dirty Pretty Things\n",
            "22 . Road to Perdition\n",
            "23 . The Devil's Own\n",
            "24 . Panic Room\n",
            "25 . Layer Cake\n",
            "26 . The International\n",
            "27 . The Good Thief\n",
            "28 . No Country for Old Men\n",
            "29 . John Q\n",
            "30 . Albino Alligator\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**END**"
      ],
      "metadata": {
        "id": "TzWZKNdEKDNh"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "hkkR1lYyJ_aK"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
